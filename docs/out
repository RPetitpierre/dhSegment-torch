Running Sphinx v3.1.2
[app] setting up extension: 'sphinx.addnodes'
[app] adding node: (<class 'sphinx.addnodes.toctree'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.toctree'>, {}
[app] adding node: (<class 'sphinx.addnodes.desc'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.desc'>, {}
[app] adding node: (<class 'sphinx.addnodes.desc_signature'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.desc_signature'>, {}
[app] adding node: (<class 'sphinx.addnodes.desc_signature_line'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.desc_signature_line'>, {}
[app] adding node: (<class 'sphinx.addnodes.desc_addname'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.desc_addname'>, {}
[app] adding node: (<class 'sphinx.addnodes.desc_type'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.desc_type'>, {}
[app] adding node: (<class 'sphinx.addnodes.desc_returns'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.desc_returns'>, {}
[app] adding node: (<class 'sphinx.addnodes.desc_name'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.desc_name'>, {}
[app] adding node: (<class 'sphinx.addnodes.desc_parameterlist'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.desc_parameterlist'>, {}
[app] adding node: (<class 'sphinx.addnodes.desc_parameter'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.desc_parameter'>, {}
[app] adding node: (<class 'sphinx.addnodes.desc_optional'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.desc_optional'>, {}
[app] adding node: (<class 'sphinx.addnodes.desc_annotation'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.desc_annotation'>, {}
[app] adding node: (<class 'sphinx.addnodes.desc_content'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.desc_content'>, {}
[app] adding node: (<class 'sphinx.addnodes.desc_sig_name'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.desc_sig_name'>, {}
[app] adding node: (<class 'sphinx.addnodes.desc_sig_operator'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.desc_sig_operator'>, {}
[app] adding node: (<class 'sphinx.addnodes.desc_sig_punctuation'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.desc_sig_punctuation'>, {}
[app] adding node: (<class 'sphinx.addnodes.versionmodified'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.versionmodified'>, {}
[app] adding node: (<class 'sphinx.addnodes.seealso'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.seealso'>, {}
[app] adding node: (<class 'sphinx.addnodes.productionlist'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.productionlist'>, {}
[app] adding node: (<class 'sphinx.addnodes.production'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.production'>, {}
[app] adding node: (<class 'sphinx.addnodes.index'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.index'>, {}
[app] adding node: (<class 'sphinx.addnodes.centered'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.centered'>, {}
[app] adding node: (<class 'sphinx.addnodes.acks'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.acks'>, {}
[app] adding node: (<class 'sphinx.addnodes.hlist'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.hlist'>, {}
[app] adding node: (<class 'sphinx.addnodes.hlistcol'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.hlistcol'>, {}
[app] adding node: (<class 'sphinx.addnodes.compact_paragraph'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.compact_paragraph'>, {}
[app] adding node: (<class 'sphinx.addnodes.glossary'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.glossary'>, {}
[app] adding node: (<class 'sphinx.addnodes.only'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.only'>, {}
[app] adding node: (<class 'sphinx.addnodes.start_of_file'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.start_of_file'>, {}
[app] adding node: (<class 'sphinx.addnodes.highlightlang'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.highlightlang'>, {}
[app] adding node: (<class 'sphinx.addnodes.tabular_col_spec'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.tabular_col_spec'>, {}
[app] adding node: (<class 'sphinx.addnodes.meta'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.meta'>, {}
[app] adding node: (<class 'sphinx.addnodes.pending_xref'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.pending_xref'>, {}
[app] adding node: (<class 'sphinx.addnodes.number_reference'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.number_reference'>, {}
[app] adding node: (<class 'sphinx.addnodes.download_reference'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.download_reference'>, {}
[app] adding node: (<class 'sphinx.addnodes.literal_emphasis'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.literal_emphasis'>, {}
[app] adding node: (<class 'sphinx.addnodes.literal_strong'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.literal_strong'>, {}
[app] adding node: (<class 'sphinx.addnodes.manpage'>, {})
[app] adding translation_handlers: <class 'sphinx.addnodes.manpage'>, {}
[app] setting up extension: 'sphinx.builders.changes'
[app] adding builder: <class 'sphinx.builders.changes.ChangesBuilder'>
[app] setting up extension: 'sphinx.builders.epub3'
[app] adding builder: <class 'sphinx.builders.epub3.Epub3Builder'>
[app] adding config value: ('epub_basename', <function setup.<locals>.<lambda> at 0x7f0547e0a3b0>, None)
[app] adding config value: ('epub_version', 3.0, 'epub')
[app] adding config value: ('epub_theme', 'epub', 'epub')
[app] adding config value: ('epub_theme_options', {}, 'epub')
[app] adding config value: ('epub_title', <function setup.<locals>.<lambda> at 0x7f0547dee200>, 'epub')
[app] adding config value: ('epub_author', <function setup.<locals>.<lambda> at 0x7f0547e0a9e0>, 'epub')
[app] adding config value: ('epub_language', <function setup.<locals>.<lambda> at 0x7f0547e014d0>, 'epub')
[app] adding config value: ('epub_publisher', <function setup.<locals>.<lambda> at 0x7f0547e1c8c0>, 'epub')
[app] adding config value: ('epub_copyright', <function setup.<locals>.<lambda> at 0x7f0547e1c200>, 'epub')
[app] adding config value: ('epub_identifier', 'unknown', 'epub')
[app] adding config value: ('epub_scheme', 'unknown', 'epub')
[app] adding config value: ('epub_uid', 'unknown', 'env')
[app] adding config value: ('epub_cover', (), 'env')
[app] adding config value: ('epub_guide', (), 'env')
[app] adding config value: ('epub_pre_files', [], 'env')
[app] adding config value: ('epub_post_files', [], 'env')
[app] adding config value: ('epub_css_files', <function setup.<locals>.<lambda> at 0x7f054795ddd0>, 'epub')
[app] adding config value: ('epub_exclude_files', [], 'env')
[app] adding config value: ('epub_tocdepth', 3, 'env')
[app] adding config value: ('epub_tocdup', True, 'env')
[app] adding config value: ('epub_tocscope', 'default', 'env')
[app] adding config value: ('epub_fix_images', False, 'env')
[app] adding config value: ('epub_max_image_width', 0, 'env')
[app] adding config value: ('epub_show_urls', 'inline', 'epub')
[app] adding config value: ('epub_use_index', <function setup.<locals>.<lambda> at 0x7f054795de60>, 'epub')
[app] adding config value: ('epub_description', 'unknown', 'epub')
[app] adding config value: ('epub_contributor', 'unknown', 'epub')
[app] adding config value: ('epub_writing_mode', 'horizontal', 'epub', <sphinx.config.ENUM object at 0x7f0547e9c250>)
[app] connecting event 'config-inited' (800): <function convert_epub_css_files at 0x7f054795dcb0> [id=0]
[app] connecting event 'builder-inited' (500): <function validate_config_values at 0x7f0547e1c950> [id=1]
[app] setting up extension: 'sphinx.builders.dirhtml'
[app] setting up extension: 'sphinx.builders.html'
[app] adding builder: <class 'sphinx.builders.html.StandaloneHTMLBuilder'>
[app] adding config value: ('html_theme', 'alabaster', 'html')
[app] adding config value: ('html_theme_path', [], 'html')
[app] adding config value: ('html_theme_options', {}, 'html')
[app] adding config value: ('html_title', <function setup.<locals>.<lambda> at 0x7f054795def0>, 'html', [<class 'str'>])
[app] adding config value: ('html_short_title', <function setup.<locals>.<lambda> at 0x7f054795df80>, 'html')
[app] adding config value: ('html_style', None, 'html', [<class 'str'>])
[app] adding config value: ('html_logo', None, 'html', [<class 'str'>])
[app] adding config value: ('html_favicon', None, 'html', [<class 'str'>])
[app] adding config value: ('html_css_files', [], 'html')
[app] adding config value: ('html_js_files', [], 'html')
[app] adding config value: ('html_static_path', [], 'html')
[app] adding config value: ('html_extra_path', [], 'html')
[app] adding config value: ('html_last_updated_fmt', None, 'html', [<class 'str'>])
[app] adding config value: ('html_sidebars', {}, 'html')
[app] adding config value: ('html_additional_pages', {}, 'html')
[app] adding config value: ('html_domain_indices', True, 'html', [<class 'list'>])
[app] adding config value: ('html_add_permalinks', 'Â¶', 'html')
[app] adding config value: ('html_use_index', True, 'html')
[app] adding config value: ('html_split_index', False, 'html')
[app] adding config value: ('html_copy_source', True, 'html')
[app] adding config value: ('html_show_sourcelink', True, 'html')
[app] adding config value: ('html_sourcelink_suffix', '.txt', 'html')
[app] adding config value: ('html_use_opensearch', '', 'html')
[app] adding config value: ('html_file_suffix', None, 'html', [<class 'str'>])
[app] adding config value: ('html_link_suffix', None, 'html', [<class 'str'>])
[app] adding config value: ('html_show_copyright', True, 'html')
[app] adding config value: ('html_show_sphinx', True, 'html')
[app] adding config value: ('html_context', {}, 'html')
[app] adding config value: ('html_output_encoding', 'utf-8', 'html')
[app] adding config value: ('html_compact_lists', True, 'html')
[app] adding config value: ('html_secnumber_suffix', '. ', 'html')
[app] adding config value: ('html_search_language', None, 'html', [<class 'str'>])
[app] adding config value: ('html_search_options', {}, 'html')
[app] adding config value: ('html_search_scorer', '', None)
[app] adding config value: ('html_scaled_image_link', True, 'html')
[app] adding config value: ('html_baseurl', '', 'html')
[app] adding config value: ('html_math_renderer', None, 'env')
[app] adding config value: ('html4_writer', False, 'html')
[app] connecting event 'config-inited' (800): <function convert_html_css_files at 0x7f05479c0b00> [id=2]
[app] connecting event 'config-inited' (800): <function convert_html_js_files at 0x7f0547948200> [id=3]
[app] connecting event 'config-inited' (800): <function validate_html_extra_path at 0x7f05479483b0> [id=4]
[app] connecting event 'config-inited' (800): <function validate_html_static_path at 0x7f0547948440> [id=5]
[app] connecting event 'config-inited' (800): <function validate_html_logo at 0x7f05479484d0> [id=6]
[app] connecting event 'config-inited' (800): <function validate_html_favicon at 0x7f0547948560> [id=7]
[app] connecting event 'builder-inited' (500): <function validate_math_renderer at 0x7f0547948320> [id=8]
[app] connecting event 'html-page-context' (500): <function setup_js_tag_helper at 0x7f0547948290> [id=9]
[app] setting up extension: 'sphinx.ext.mathjax'
[app] adding html_math_renderer: mathjax, (<function html_visit_math at 0x7f0547964290>, None), (<function html_visit_displaymath at 0x7f0547964c20>, None)
[app] adding config value: ('mathjax_path', 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/latest.js?config=TeX-AMS-MML_HTMLorMML', 'html')
[app] adding config value: ('mathjax_options', {}, 'html')
[app] adding config value: ('mathjax_inline', ['\\(', '\\)'], 'html')
[app] adding config value: ('mathjax_display', ['\\[', '\\]'], 'html')
[app] adding config value: ('mathjax_config', None, 'html')
[app] connecting event 'env-updated' (500): <function install_mathjax at 0x7f0547964cb0> [id=10]
[app] setting up extension: 'sphinx.builders.html.transforms'
[app] adding post transform: <class 'sphinx.builders.html.transforms.KeyboardTransform'>
[app] adding builder: <class 'sphinx.builders.dirhtml.DirectoryHTMLBuilder'>
[app] setting up extension: 'sphinx.builders.dummy'
[app] adding builder: <class 'sphinx.builders.dummy.DummyBuilder'>
[app] setting up extension: 'sphinx.builders.gettext'
[app] adding builder: <class 'sphinx.builders.gettext.MessageCatalogBuilder'>
[app] adding config value: ('gettext_compact', True, 'gettext')
[app] adding config value: ('gettext_location', True, 'gettext')
[app] adding config value: ('gettext_uuid', False, 'gettext')
[app] adding config value: ('gettext_auto_build', True, 'env')
[app] adding config value: ('gettext_additional_targets', [], 'env')
[app] adding config value: ('gettext_last_translator', 'FULL NAME <EMAIL@ADDRESS>', 'gettext')
[app] adding config value: ('gettext_language_team', 'LANGUAGE <LL@li.org>', 'gettext')
[app] setting up extension: 'sphinx.builders.html'
[app] setting up extension: 'sphinx.builders.latex'
[app] setting up extension: 'sphinx.builders.latex.transforms'
[app] adding transform: <class 'sphinx.builders.latex.transforms.FootnoteDocnameUpdater'>
[app] adding post transform: <class 'sphinx.builders.latex.transforms.BibliographyTransform'>
[app] adding post transform: <class 'sphinx.builders.latex.transforms.CitationReferenceTransform'>
[app] adding post transform: <class 'sphinx.builders.latex.transforms.DocumentTargetTransform'>
[app] adding post transform: <class 'sphinx.builders.latex.transforms.IndexInSectionTitleTransform'>
[app] adding post transform: <class 'sphinx.builders.latex.transforms.LaTeXFootnoteTransform'>
[app] adding post transform: <class 'sphinx.builders.latex.transforms.LiteralBlockTransform'>
[app] adding post transform: <class 'sphinx.builders.latex.transforms.MathReferenceTransform'>
[app] adding post transform: <class 'sphinx.builders.latex.transforms.ShowUrlsTransform'>
[app] adding builder: <class 'sphinx.builders.latex.LaTeXBuilder'>
[app] connecting event 'config-inited' (800): <function validate_config_values at 0x7f0547822cb0> [id=11]
[app] connecting event 'config-inited' (800): <function validate_latex_theme_options at 0x7f0547822d40> [id=12]
[app] connecting event 'builder-inited' (500): <function install_pakcages_for_ja at 0x7f0547822dd0> [id=13]
[app] adding config value: ('latex_engine', <function default_latex_engine at 0x7f0547822e60>, None, <sphinx.config.ENUM object at 0x7f0547e113d0>)
[app] adding config value: ('latex_documents', <function default_latex_documents at 0x7f0547826050>, None)
[app] adding config value: ('latex_logo', None, None, [<class 'str'>])
[app] adding config value: ('latex_appendices', [], None)
[app] adding config value: ('latex_use_latex_multicolumn', False, None)
[app] adding config value: ('latex_use_xindy', <function default_latex_use_xindy at 0x7f0547822f80>, None, [<class 'bool'>])
[app] adding config value: ('latex_toplevel_sectioning', None, None, <sphinx.config.ENUM object at 0x7f0547806d10>)
[app] adding config value: ('latex_domain_indices', True, None, [<class 'list'>])
[app] adding config value: ('latex_show_urls', 'no', None)
[app] adding config value: ('latex_show_pagerefs', False, None)
[app] adding config value: ('latex_elements', {}, None)
[app] adding config value: ('latex_additional_files', [], None)
[app] adding config value: ('latex_theme', 'manual', None, [<class 'str'>])
[app] adding config value: ('latex_theme_options', {}, None)
[app] adding config value: ('latex_theme_path', [], None, [<class 'list'>])
[app] adding config value: ('latex_docclass', <function default_latex_docclass at 0x7f0547822ef0>, None)
[app] setting up extension: 'sphinx.builders.linkcheck'
[app] adding builder: <class 'sphinx.builders.linkcheck.CheckExternalLinksBuilder'>
[app] adding config value: ('linkcheck_ignore', [], None)
[app] adding config value: ('linkcheck_auth', [], None)
[app] adding config value: ('linkcheck_request_headers', {}, None)
[app] adding config value: ('linkcheck_retries', 1, None)
[app] adding config value: ('linkcheck_timeout', None, None, [<class 'int'>])
[app] adding config value: ('linkcheck_workers', 5, None)
[app] adding config value: ('linkcheck_anchors', True, None)
[app] adding config value: ('linkcheck_anchors_ignore', ['^!'], None)
[app] setting up extension: 'sphinx.builders.manpage'
[app] adding builder: <class 'sphinx.builders.manpage.ManualPageBuilder'>
[app] adding config value: ('man_pages', <function default_man_pages at 0x7f0547964ef0>, None)
[app] adding config value: ('man_show_urls', False, None)
[app] setting up extension: 'sphinx.builders.singlehtml'
[app] setting up extension: 'sphinx.builders.html'
[app] adding builder: <class 'sphinx.builders.singlehtml.SingleFileHTMLBuilder'>
[app] adding config value: ('singlehtml_sidebars', <function setup.<locals>.<lambda> at 0x7f05474b4dd0>, 'html')
[app] setting up extension: 'sphinx.builders.texinfo'
[app] adding builder: <class 'sphinx.builders.texinfo.TexinfoBuilder'>
[app] adding config value: ('texinfo_documents', <function default_texinfo_documents at 0x7f0547437e60>, None)
[app] adding config value: ('texinfo_appendices', [], None)
[app] adding config value: ('texinfo_elements', {}, None)
[app] adding config value: ('texinfo_domain_indices', True, None, [<class 'list'>])
[app] adding config value: ('texinfo_show_urls', 'footnote', None)
[app] adding config value: ('texinfo_no_detailmenu', False, None)
[app] setting up extension: 'sphinx.builders.text'
[app] adding builder: <class 'sphinx.builders.text.TextBuilder'>
[app] adding config value: ('text_sectionchars', '*=-~"+`', 'env')
[app] adding config value: ('text_newlines', 'unix', 'env')
[app] adding config value: ('text_add_secnumbers', True, 'env')
[app] adding config value: ('text_secnumber_suffix', '. ', 'env')
[app] setting up extension: 'sphinx.builders.xml'
[app] adding builder: <class 'sphinx.builders.xml.XMLBuilder'>
[app] adding builder: <class 'sphinx.builders.xml.PseudoXMLBuilder'>
[app] adding config value: ('xml_pretty', True, 'env')
[app] setting up extension: 'sphinx.config'
[app] connecting event 'config-inited' (800): <function convert_source_suffix at 0x7f054906fe60> [id=14]
[app] connecting event 'config-inited' (800): <function init_numfig_format at 0x7f054906fef0> [id=15]
[app] connecting event 'config-inited' (800): <function correct_copyright_year at 0x7f054906ff80> [id=16]
[app] connecting event 'config-inited' (800): <function check_confval_types at 0x7f0549076050> [id=17]
[app] connecting event 'config-inited' (800): <function check_primary_domain at 0x7f0549076170> [id=18]
[app] connecting event 'env-get-outdated' (500): <function check_master_doc at 0x7f0549076200> [id=19]
[app] setting up extension: 'sphinx.domains.c'
[app] adding domain: <class 'sphinx.domains.c.CDomain'>
[app] adding config value: ('c_id_attributes', [], 'env')
[app] adding config value: ('c_paren_attributes', [], 'env')
[app] setting up extension: 'sphinx.domains.changeset'
[app] adding domain: <class 'sphinx.domains.changeset.ChangeSetDomain'>
[app] adding directive: ('deprecated', <class 'sphinx.domains.changeset.VersionChange'>)
[app] adding directive: ('versionadded', <class 'sphinx.domains.changeset.VersionChange'>)
[app] adding directive: ('versionchanged', <class 'sphinx.domains.changeset.VersionChange'>)
[app] setting up extension: 'sphinx.domains.citation'
[app] adding domain: <class 'sphinx.domains.citation.CitationDomain'>
[app] adding transform: <class 'sphinx.domains.citation.CitationDefinitionTransform'>
[app] adding transform: <class 'sphinx.domains.citation.CitationReferenceTransform'>
[app] setting up extension: 'sphinx.domains.cpp'
[app] adding domain: <class 'sphinx.domains.cpp.CPPDomain'>
[app] adding config value: ('cpp_index_common_prefix', [], 'env')
[app] adding config value: ('cpp_id_attributes', [], 'env')
[app] adding config value: ('cpp_paren_attributes', [], 'env')
[app] adding post transform: <class 'sphinx.domains.cpp.AliasTransform'>
[app] adding config value: ('cpp_debug_lookup', False, '')
[app] adding config value: ('cpp_debug_show_tree', False, '')
[app] connecting event 'builder-inited' (500): <function setup.<locals>.setDebugFlags at 0x7f05473aef80> [id=20]
[app] setting up extension: 'sphinx.domains.index'
[app] adding domain: <class 'sphinx.domains.index.IndexDomain'>
[app] adding directive: ('index', <class 'sphinx.domains.index.IndexDirective'>)
[app] adding role: ('index', <sphinx.domains.index.IndexRole object at 0x7f054734ef90>)
[app] setting up extension: 'sphinx.domains.javascript'
[app] adding domain: <class 'sphinx.domains.javascript.JavaScriptDomain'>
[app] setting up extension: 'sphinx.domains.math'
[app] adding domain: <class 'sphinx.domains.math.MathDomain'>
[app] adding role: ('eq', <sphinx.domains.math.MathReferenceRole object at 0x7f05472efa50>)
[app] setting up extension: 'sphinx.domains.python'
[app] setting up extension: 'sphinx.directives'
[app] adding config value: ('strip_signature_backslash', False, 'env')
[app] adding event: 'object-description-transform'
[app] adding domain: <class 'sphinx.domains.python.PythonDomain'>
[app] connecting event 'object-description-transform' (500): <function filter_meta_fields at 0x7f05478c8b90> [id=21]
[app] connecting event 'missing-reference' (900): <function builtin_resolver at 0x7f05478d4830> [id=22]
[app] setting up extension: 'sphinx.domains.rst'
[app] adding domain: <class 'sphinx.domains.rst.ReSTDomain'>
[app] setting up extension: 'sphinx.domains.std'
[app] adding domain: <class 'sphinx.domains.std.StandardDomain'>
[app] setting up extension: 'sphinx.directives'
[app] setting up extension: 'sphinx.directives.code'
[app] setting up extension: 'sphinx.directives.other'
[app] setting up extension: 'sphinx.directives.patches'
[app] setting up extension: 'sphinx.extension'
[app] connecting event 'config-inited' (800): <function verify_needs_extensions at 0x7f0549045290> [id=23]
[app] setting up extension: 'sphinx.parsers'
[app] adding search source_parser: <class 'sphinx.parsers.RSTParser'>
[app] setting up extension: 'sphinx.registry'
[app] connecting event 'config-inited' (800): <function merge_source_suffix at 0x7f0549045c20> [id=24]
[app] setting up extension: 'sphinx.roles'
[app] setting up extension: 'sphinx.transforms'
[app] adding transform: <class 'sphinx.transforms.ApplySourceWorkaround'>
[app] adding transform: <class 'sphinx.transforms.ExtraTranslatableNodes'>
[app] adding transform: <class 'sphinx.transforms.DefaultSubstitutions'>
[app] adding transform: <class 'sphinx.transforms.MoveModuleTargets'>
[app] adding transform: <class 'sphinx.transforms.HandleCodeBlocks'>
[app] adding transform: <class 'sphinx.transforms.SortIds'>
[app] adding transform: <class 'sphinx.transforms.DoctestTransform'>
[app] adding transform: <class 'sphinx.transforms.FigureAligner'>
[app] adding transform: <class 'sphinx.transforms.AutoNumbering'>
[app] adding transform: <class 'sphinx.transforms.AutoIndexUpgrader'>
[app] adding transform: <class 'sphinx.transforms.FilterSystemMessages'>
[app] adding transform: <class 'sphinx.transforms.UnreferencedFootnotesDetector'>
[app] adding transform: <class 'sphinx.transforms.SphinxSmartQuotes'>
[app] adding transform: <class 'sphinx.transforms.DoctreeReadEvent'>
[app] adding transform: <class 'sphinx.transforms.ManpageLink'>
[app] setting up extension: 'sphinx.transforms.compact_bullet_list'
[app] adding transform: <class 'sphinx.transforms.compact_bullet_list.RefOnlyBulletListTransform'>
[app] setting up extension: 'sphinx.transforms.i18n'
[app] adding transform: <class 'sphinx.transforms.i18n.PreserveTranslatableMessages'>
[app] adding transform: <class 'sphinx.transforms.i18n.Locale'>
[app] adding transform: <class 'sphinx.transforms.i18n.RemoveTranslatableInline'>
[app] setting up extension: 'sphinx.transforms.references'
[app] adding transform: <class 'sphinx.transforms.references.SubstitutionDefinitionsRemover'>
[app] adding transform: <class 'sphinx.transforms.references.SphinxDanglingReferences'>
[app] adding transform: <class 'sphinx.transforms.references.SphinxDomains'>
[app] setting up extension: 'sphinx.transforms.post_transforms'
[app] adding post transform: <class 'sphinx.transforms.post_transforms.ReferencesResolver'>
[app] adding post transform: <class 'sphinx.transforms.post_transforms.OnlyNodeTransform'>
[app] adding post transform: <class 'sphinx.transforms.post_transforms.SigElementFallbackTransform'>
[app] setting up extension: 'sphinx.transforms.post_transforms.code'
[app] adding post transform: <class 'sphinx.transforms.post_transforms.code.HighlightLanguageTransform'>
[app] adding post transform: <class 'sphinx.transforms.post_transforms.code.TrimDoctestFlagsTransform'>
[app] setting up extension: 'sphinx.transforms.post_transforms.images'
[app] adding post transform: <class 'sphinx.transforms.post_transforms.images.ImageDownloader'>
[app] adding post transform: <class 'sphinx.transforms.post_transforms.images.DataURIExtractor'>
[app] setting up extension: 'sphinx.util.compat'
[app] adding transform: <class 'sphinx.util.compat.IndexEntriesMigrator'>
[app] connecting event 'builder-inited' (500): <function register_application_for_autosummary at 0x7f0547159b00> [id=25]
[app] setting up extension: 'sphinx.versioning'
[app] adding transform: <class 'sphinx.versioning.UIDTransform'>
[app] setting up extension: 'sphinx.environment.collectors.dependencies'
[app] adding environment collector: <class 'sphinx.environment.collectors.dependencies.DependenciesCollector'>
[app] connecting event 'doctree-read' (500): <bound method DependenciesCollector.process_doc of <sphinx.environment.collectors.dependencies.DependenciesCollector object at 0x7f054715c3d0>> [id=26]
[app] connecting event 'env-merge-info' (500): <bound method DependenciesCollector.merge_other of <sphinx.environment.collectors.dependencies.DependenciesCollector object at 0x7f054715c3d0>> [id=27]
[app] connecting event 'env-purge-doc' (500): <bound method DependenciesCollector.clear_doc of <sphinx.environment.collectors.dependencies.DependenciesCollector object at 0x7f054715c3d0>> [id=28]
[app] connecting event 'env-get-updated' (500): <bound method EnvironmentCollector.get_updated_docs of <sphinx.environment.collectors.dependencies.DependenciesCollector object at 0x7f054715c3d0>> [id=29]
[app] connecting event 'env-get-outdated' (500): <bound method EnvironmentCollector.get_outdated_docs of <sphinx.environment.collectors.dependencies.DependenciesCollector object at 0x7f054715c3d0>> [id=30]
[app] setting up extension: 'sphinx.environment.collectors.asset'
[app] adding environment collector: <class 'sphinx.environment.collectors.asset.ImageCollector'>
[app] connecting event 'doctree-read' (500): <bound method ImageCollector.process_doc of <sphinx.environment.collectors.asset.ImageCollector object at 0x7f054715c1d0>> [id=31]
[app] connecting event 'env-merge-info' (500): <bound method ImageCollector.merge_other of <sphinx.environment.collectors.asset.ImageCollector object at 0x7f054715c1d0>> [id=32]
[app] connecting event 'env-purge-doc' (500): <bound method ImageCollector.clear_doc of <sphinx.environment.collectors.asset.ImageCollector object at 0x7f054715c1d0>> [id=33]
[app] connecting event 'env-get-updated' (500): <bound method EnvironmentCollector.get_updated_docs of <sphinx.environment.collectors.asset.ImageCollector object at 0x7f054715c1d0>> [id=34]
[app] connecting event 'env-get-outdated' (500): <bound method EnvironmentCollector.get_outdated_docs of <sphinx.environment.collectors.asset.ImageCollector object at 0x7f054715c1d0>> [id=35]
[app] adding environment collector: <class 'sphinx.environment.collectors.asset.DownloadFileCollector'>
[app] connecting event 'doctree-read' (500): <bound method DownloadFileCollector.process_doc of <sphinx.environment.collectors.asset.DownloadFileCollector object at 0x7f054715cb10>> [id=36]
[app] connecting event 'env-merge-info' (500): <bound method DownloadFileCollector.merge_other of <sphinx.environment.collectors.asset.DownloadFileCollector object at 0x7f054715cb10>> [id=37]
[app] connecting event 'env-purge-doc' (500): <bound method DownloadFileCollector.clear_doc of <sphinx.environment.collectors.asset.DownloadFileCollector object at 0x7f054715cb10>> [id=38]
[app] connecting event 'env-get-updated' (500): <bound method EnvironmentCollector.get_updated_docs of <sphinx.environment.collectors.asset.DownloadFileCollector object at 0x7f054715cb10>> [id=39]
[app] connecting event 'env-get-outdated' (500): <bound method EnvironmentCollector.get_outdated_docs of <sphinx.environment.collectors.asset.DownloadFileCollector object at 0x7f054715cb10>> [id=40]
[app] setting up extension: 'sphinx.environment.collectors.metadata'
[app] adding environment collector: <class 'sphinx.environment.collectors.metadata.MetadataCollector'>
[app] connecting event 'doctree-read' (500): <bound method MetadataCollector.process_doc of <sphinx.environment.collectors.metadata.MetadataCollector object at 0x7f0547163290>> [id=41]
[app] connecting event 'env-merge-info' (500): <bound method MetadataCollector.merge_other of <sphinx.environment.collectors.metadata.MetadataCollector object at 0x7f0547163290>> [id=42]
[app] connecting event 'env-purge-doc' (500): <bound method MetadataCollector.clear_doc of <sphinx.environment.collectors.metadata.MetadataCollector object at 0x7f0547163290>> [id=43]
[app] connecting event 'env-get-updated' (500): <bound method EnvironmentCollector.get_updated_docs of <sphinx.environment.collectors.metadata.MetadataCollector object at 0x7f0547163290>> [id=44]
[app] connecting event 'env-get-outdated' (500): <bound method EnvironmentCollector.get_outdated_docs of <sphinx.environment.collectors.metadata.MetadataCollector object at 0x7f0547163290>> [id=45]
[app] setting up extension: 'sphinx.environment.collectors.title'
[app] adding environment collector: <class 'sphinx.environment.collectors.title.TitleCollector'>
[app] connecting event 'doctree-read' (500): <bound method TitleCollector.process_doc of <sphinx.environment.collectors.title.TitleCollector object at 0x7f0547163690>> [id=46]
[app] connecting event 'env-merge-info' (500): <bound method TitleCollector.merge_other of <sphinx.environment.collectors.title.TitleCollector object at 0x7f0547163690>> [id=47]
[app] connecting event 'env-purge-doc' (500): <bound method TitleCollector.clear_doc of <sphinx.environment.collectors.title.TitleCollector object at 0x7f0547163690>> [id=48]
[app] connecting event 'env-get-updated' (500): <bound method EnvironmentCollector.get_updated_docs of <sphinx.environment.collectors.title.TitleCollector object at 0x7f0547163690>> [id=49]
[app] connecting event 'env-get-outdated' (500): <bound method EnvironmentCollector.get_outdated_docs of <sphinx.environment.collectors.title.TitleCollector object at 0x7f0547163690>> [id=50]
[app] setting up extension: 'sphinx.environment.collectors.toctree'
[app] adding environment collector: <class 'sphinx.environment.collectors.toctree.TocTreeCollector'>
[app] connecting event 'doctree-read' (500): <bound method TocTreeCollector.process_doc of <sphinx.environment.collectors.toctree.TocTreeCollector object at 0x7f0547163b10>> [id=51]
[app] connecting event 'env-merge-info' (500): <bound method TocTreeCollector.merge_other of <sphinx.environment.collectors.toctree.TocTreeCollector object at 0x7f0547163b10>> [id=52]
[app] connecting event 'env-purge-doc' (500): <bound method TocTreeCollector.clear_doc of <sphinx.environment.collectors.toctree.TocTreeCollector object at 0x7f0547163b10>> [id=53]
[app] connecting event 'env-get-updated' (500): <bound method TocTreeCollector.get_updated_docs of <sphinx.environment.collectors.toctree.TocTreeCollector object at 0x7f0547163b10>> [id=54]
[app] connecting event 'env-get-outdated' (500): <bound method EnvironmentCollector.get_outdated_docs of <sphinx.environment.collectors.toctree.TocTreeCollector object at 0x7f0547163b10>> [id=55]
[app] setting up extension: 'sphinxcontrib.applehelp'
[app] setting up extension: 'sphinx.builders.html'
[app] adding builder: <class 'sphinxcontrib.applehelp.AppleHelpBuilder'>
[app] adding config value: ('applehelp_bundle_name', <function setup.<locals>.<lambda> at 0x7f054729ee60>, 'applehelp')
[app] adding config value: ('applehelp_bundle_id', None, 'applehelp', [<class 'str'>])
[app] adding config value: ('applehelp_dev_region', 'en-us', 'applehelp')
[app] adding config value: ('applehelp_bundle_version', '1', 'applehelp')
[app] adding config value: ('applehelp_icon', None, 'applehelp', [<class 'str'>])
[app] adding config value: ('applehelp_kb_product', <function setup.<locals>.<lambda> at 0x7f0547175680>, 'applehelp')
[app] adding config value: ('applehelp_kb_url', None, 'applehelp', [<class 'str'>])
[app] adding config value: ('applehelp_remote_url', None, 'applehelp', [<class 'str'>])
[app] adding config value: ('applehelp_index_anchors', False, 'applehelp', [<class 'str'>])
[app] adding config value: ('applehelp_min_term_length', None, 'applehelp', [<class 'str'>])
[app] adding config value: ('applehelp_stopwords', <function setup.<locals>.<lambda> at 0x7f05471803b0>, 'applehelp')
[app] adding config value: ('applehelp_locale', <function setup.<locals>.<lambda> at 0x7f0547180440>, 'applehelp')
[app] adding config value: ('applehelp_title', <function setup.<locals>.<lambda> at 0x7f054716d830>, 'applehelp')
[app] adding config value: ('applehelp_codesign_identity', <function setup.<locals>.<lambda> at 0x7f05471804d0>, 'applehelp')
[app] adding config value: ('applehelp_codesign_flags', <function setup.<locals>.<lambda> at 0x7f0547180560>, 'applehelp')
[app] adding config value: ('applehelp_indexer_path', '/usr/bin/hiutil', 'applehelp')
[app] adding config value: ('applehelp_codesign_path', '/usr/bin/codesign', 'applehelp')
[app] adding config value: ('applehelp_disable_external_tools', False, 'applehelp')
[app] setting up extension: 'sphinxcontrib.devhelp'
[app] setting up extension: 'sphinx.builders.html'
[app] adding builder: <class 'sphinxcontrib.devhelp.DevhelpBuilder'>
[app] adding config value: ('devhelp_basename', <function setup.<locals>.<lambda> at 0x7f0547180320>, 'devhelp')
[app] setting up extension: 'sphinxcontrib.htmlhelp'
[app] setting up extension: 'sphinx.builders.html'
[app] adding builder: <class 'sphinxcontrib.htmlhelp.HTMLHelpBuilder'>
[app] adding config value: ('htmlhelp_basename', <function default_htmlhelp_basename at 0x7f0547117320>, '')
[app] adding config value: ('htmlhelp_file_suffix', None, 'html', [<class 'str'>])
[app] adding config value: ('htmlhelp_link_suffix', None, 'html', [<class 'str'>])
[app] setting up extension: 'sphinxcontrib.serializinghtml'
[app] setting up extension: 'sphinx.builders.html'
[app] adding builder: <class 'sphinxcontrib.serializinghtml.JSONHTMLBuilder'>
[app] adding builder: <class 'sphinxcontrib.serializinghtml.PickleHTMLBuilder'>
[app] setting up extension: 'sphinxcontrib.qthelp'
[app] setting up extension: 'sphinx.builders.html'
[app] adding builder: <class 'sphinxcontrib.qthelp.QtHelpBuilder'>
[app] adding config value: ('qthelp_basename', <function setup.<locals>.<lambda> at 0x7f05471750e0>, 'html')
[app] adding config value: ('qthelp_namespace', None, 'html', [<class 'str'>])
[app] adding config value: ('qthelp_theme', 'nonav', 'html')
[app] adding config value: ('qthelp_theme_options', {}, 'html')
[app] setting up extension: 'alabaster'
[app] adding HTML theme: 'alabaster', '/home/raph/.local/lib/python3.7/site-packages/alabaster'
[app] connecting event 'html-page-context' (500): <function update_context at 0x7f0547125680> [id=56]
[app] setting up extension: 'sphinx.ext.autodoc'
[app] adding autodocumenter: <class 'sphinx.ext.autodoc.ModuleDocumenter'>
[app] adding directive: ('automodule', <class 'sphinx.ext.autodoc.directive.AutodocDirective'>)
[app] adding autodocumenter: <class 'sphinx.ext.autodoc.ClassDocumenter'>
[app] adding directive: ('autoclass', <class 'sphinx.ext.autodoc.directive.AutodocDirective'>)
[app] adding autodocumenter: <class 'sphinx.ext.autodoc.ExceptionDocumenter'>
[app] adding directive: ('autoexception', <class 'sphinx.ext.autodoc.directive.AutodocDirective'>)
[app] adding autodocumenter: <class 'sphinx.ext.autodoc.DataDocumenter'>
[app] adding directive: ('autodata', <class 'sphinx.ext.autodoc.directive.AutodocDirective'>)
[app] adding autodocumenter: <class 'sphinx.ext.autodoc.DataDeclarationDocumenter'>
[app] adding directive: ('autodatadecl', <class 'sphinx.ext.autodoc.directive.AutodocDirective'>)
[app] adding autodocumenter: <class 'sphinx.ext.autodoc.GenericAliasDocumenter'>
[app] adding directive: ('autogenericalias', <class 'sphinx.ext.autodoc.directive.AutodocDirective'>)
[app] adding autodocumenter: <class 'sphinx.ext.autodoc.TypeVarDocumenter'>
[app] adding directive: ('autotypevar', <class 'sphinx.ext.autodoc.directive.AutodocDirective'>)
[app] adding autodocumenter: <class 'sphinx.ext.autodoc.FunctionDocumenter'>
[app] adding directive: ('autofunction', <class 'sphinx.ext.autodoc.directive.AutodocDirective'>)
[app] adding autodocumenter: <class 'sphinx.ext.autodoc.DecoratorDocumenter'>
[app] adding directive: ('autodecorator', <class 'sphinx.ext.autodoc.directive.AutodocDirective'>)
[app] adding autodocumenter: <class 'sphinx.ext.autodoc.MethodDocumenter'>
[app] adding directive: ('automethod', <class 'sphinx.ext.autodoc.directive.AutodocDirective'>)
[app] adding autodocumenter: <class 'sphinx.ext.autodoc.AttributeDocumenter'>
[app] adding directive: ('autoattribute', <class 'sphinx.ext.autodoc.directive.AutodocDirective'>)
[app] adding autodocumenter: <class 'sphinx.ext.autodoc.PropertyDocumenter'>
[app] adding directive: ('autoproperty', <class 'sphinx.ext.autodoc.directive.AutodocDirective'>)
[app] adding autodocumenter: <class 'sphinx.ext.autodoc.InstanceAttributeDocumenter'>
[app] adding directive: ('autoinstanceattribute', <class 'sphinx.ext.autodoc.directive.AutodocDirective'>)
[app] adding autodocumenter: <class 'sphinx.ext.autodoc.SlotsAttributeDocumenter'>
[app] adding directive: ('autoslotsattribute', <class 'sphinx.ext.autodoc.directive.AutodocDirective'>)
[app] adding config value: ('autoclass_content', 'class', True, <sphinx.config.ENUM object at 0x7f05470f1550>)
[app] adding config value: ('autodoc_member_order', 'alphabetical', True, <sphinx.config.ENUM object at 0x7f05470f15d0>)
[app] adding config value: ('autodoc_default_options', {}, True)
[app] adding config value: ('autodoc_docstring_signature', True, True)
[app] adding config value: ('autodoc_mock_imports', [], True)
[app] adding config value: ('autodoc_typehints', 'signature', True, <sphinx.config.ENUM object at 0x7f05470f1610>)
[app] adding config value: ('autodoc_warningiserror', True, True)
[app] adding config value: ('autodoc_inherit_docstrings', True, True)
[app] adding event: 'autodoc-before-process-signature'
[app] adding event: 'autodoc-process-docstring'
[app] adding event: 'autodoc-process-signature'
[app] adding event: 'autodoc-skip-member'
[app] connecting event 'config-inited' (800): <function migrate_autodoc_member_order at 0x7f05470ef830> [id=57]
[app] setting up extension: 'sphinx.ext.autodoc.type_comment'
[app] connecting event 'autodoc-before-process-signature' (500): <function update_annotations_using_type_comments at 0x7f05470ef950> [id=58]
[app] setting up extension: 'sphinx.ext.autodoc.typehints'
[app] connecting event 'autodoc-process-signature' (500): <function record_typehints at 0x7f0547146b90> [id=59]
[app] connecting event 'object-description-transform' (500): <function merge_typehints at 0x7f05470f6050> [id=60]
[app] setting up extension: 'sphinx.ext.autosummary'
[app] setting up extension: 'sphinx.ext.autodoc'
[app] adding node: (<class 'sphinx.ext.autosummary.autosummary_toc'>, {'html': (<function autosummary_toc_visit_html at 0x7f05470fcef0>, <function autosummary_noop at 0x7f05470fcf80>), 'latex': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>), 'text': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>), 'man': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>), 'texinfo': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>)})
[app] adding translation_handlers: <class 'sphinx.ext.autosummary.autosummary_toc'>, {'html': (<function autosummary_toc_visit_html at 0x7f05470fcef0>, <function autosummary_noop at 0x7f05470fcf80>), 'latex': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>), 'text': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>), 'man': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>), 'texinfo': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>)}
[app] adding node: (<class 'sphinx.ext.autosummary.autosummary_table'>, {'html': (<function autosummary_table_visit_html at 0x7f0547101050>, <function autosummary_noop at 0x7f05470fcf80>), 'latex': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>), 'text': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>), 'man': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>), 'texinfo': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>)})
[app] adding translation_handlers: <class 'sphinx.ext.autosummary.autosummary_table'>, {'html': (<function autosummary_table_visit_html at 0x7f0547101050>, <function autosummary_noop at 0x7f05470fcf80>), 'latex': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>), 'text': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>), 'man': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>), 'texinfo': (<function autosummary_noop at 0x7f05470fcf80>, <function autosummary_noop at 0x7f05470fcf80>)}
[app] adding directive: ('autosummary', <class 'sphinx.ext.autosummary.Autosummary'>)
[app] adding role: ('autolink', <sphinx.ext.autosummary.AutoLink object at 0x7f05470f1690>)
[app] connecting event 'builder-inited' (500): <function process_generate_options at 0x7f0547101cb0> [id=61]
[app] adding config value: ('autosummary_context', {}, True)
[app] adding config value: ('autosummary_generate', [], True, [<class 'bool'>])
[app] adding config value: ('autosummary_generate_overwrite', True, False)
[app] adding config value: ('autosummary_mock_imports', <function setup.<locals>.<lambda> at 0x7f05470fcdd0>, 'env')
[app] adding config value: ('autosummary_imported_members', [], False, [<class 'bool'>])
[app] setting up extension: 'sphinx_autodoc_typehints'
[app] adding config value: ('set_type_checking_flag', False, 'html')
[app] adding config value: ('always_document_param_types', False, 'html')
[app] adding config value: ('typehints_fully_qualified', False, 'env')
[app] adding config value: ('typehints_document_rtype', True, 'env')
[app] connecting event 'builder-inited' (500): <function builder_ready at 0x7f054708b3b0> [id=62]
[app] connecting event 'autodoc-process-signature' (500): <function process_signature at 0x7f054708b050> [id=63]
[app] connecting event 'autodoc-process-docstring' (500): <function process_docstring at 0x7f054708b320> [id=64]
[app] setting up extension: 'sphinxcontrib.katex'
[app] adding html_math_renderer: katex, (<function html_visit_math at 0x7f0547093170>, None), (<function html_visit_displaymath at 0x7f0547093200>, None)
[app] adding config value: ('katex_css_path', 'https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.css', False)
[app] adding config value: ('katex_js_path', 'https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.js', False)
[app] adding config value: ('katex_autorender_path', 'https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/contrib/auto-render.min.js', False)
[app] adding config value: ('katex_inline', ['\\(', '\\)'], 'html')
[app] adding config value: ('katex_display', ['\\[', '\\]'], 'html')
[app] adding config value: ('katex_options', '', 'html')
[app] adding config value: ('katex_prerender', False, 'html')
[app] connecting event 'builder-inited' (500): <function builder_inited at 0x7f0547093290> [id=65]
[app] connecting event 'build-finished' (500): <function builder_finished at 0x7f0547093320> [id=66]
[app] setting up extension: 'sphinx_autosummary_dhsegment'
[app] adding directive: ('autosummarydhsegment', <class 'sphinx_autosummary_dhsegment.Autosummarydhsegment'>)
[app] connecting event 'config-inited' (500): <function on_config_inited at 0x7f05470989e0> [id=67]
[app] adding config value: ('autosummary_filename_map', {}, 'html')
[app] setting up extension: 'sphinx.ext.intersphinx'
[app] adding config value: ('intersphinx_mapping', {}, True)
[app] adding config value: ('intersphinx_cache_limit', 5, False)
[app] adding config value: ('intersphinx_timeout', None, False)
[app] connecting event 'config-inited' (800): <function normalize_intersphinx_mapping at 0x7f0547068b00> [id=68]
[app] connecting event 'builder-inited' (500): <function load_mappings at 0x7f05470689e0> [id=69]
[app] connecting event 'missing-reference' (500): <function missing_reference at 0x7f0547068a70> [id=70]
[app] connecting event 'autodoc-process-docstring' (500): <function process_docstring at 0x7f0547dee290> [id=71]
[app] emitting event: 'config-inited'(<sphinx.config.Config object at 0x7f0547e69d90>,)
[app] emitting event: 'builder-inited'()
[autosummary] generating autosummary for: data.rst, generated/dh_segment_torch.nn.BCEWithLogitsLoss.rst, generated/dh_segment_torch.nn.CombinedLoss.rst, generated/dh_segment_torch.nn.CrossEntropyLoss.rst, generated/dh_segment_torch.nn.DiceLoss.rst, generated/dh_segment_torch.nn.TopologyLoss.rst, index.rst, loss.rst, train.rst, trainer.rst
[app] adding stylesheet: 'https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.css'
[app] adding stylesheet: 'katex-math.css'
loading intersphinx inventory from https://docs.python.org/3/objects.inv...
loading intersphinx inventory from https://docs.scipy.org/doc/numpy/objects.inv...
loading intersphinx inventory from https://pytorch.org/docs/stable/objects.inv...
loading intersphinx inventory from https://pandas.pydata.org/pandas-docs/stable/objects.inv...
loading intersphinx inventory from https://albumentations.readthedocs.io/en/latest/objects.inv...
intersphinx inventory has moved: https://docs.scipy.org/doc/numpy/objects.inv -> https://numpy.org/doc/stable/objects.inv
building [mo]: targets for 0 po files that are out of date
building [html]: targets for 10 source files that are out of date
updating environment: [app] emitting event: 'env-get-outdated'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, {'generated/dh_segment_torch.nn.Top
[new config] 10 added, 0 changed, 0 removed
[app] emitting event: 'env-before-read-docs'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, ['data', 'generated/dh_segment_torc
reading sources... [ 10%] data
[app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, 'data')
[app] emitting event: 'source-read'('data', ['====\ndata\n====\n\n.. automodule:: dh_segment_torch.data.color_labels\n    :members:\n..
[autodoc] /home/raph/phd/dhSegment-torch/docs/data.rst:5: input:
.. automodule:: dh_segment_torch.data.color_labels
    :members:
[autodoc] import dh_segment_torch.data.color_labels
[autodoc] import dh_segment_torch.data.color_labels => <module 'dh_segment_torch.data.color_labels' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/color_labels.py'>
[app] emitting event: 'autodoc-process-signature'('module', 'dh_segment_torch.data.color_labels', <module 'dh_segment_torch.data.color_labels' from '
[app] emitting event: 'autodoc-process-docstring'('module', 'dh_segment_torch.data.color_labels', <module 'dh_segment_torch.data.color_labels' from '
[app] emitting event: 'autodoc-skip-member'('module', 'Any', typing.Any, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', 'ColorLabels', <class 'dh_segment_torch.data.color_labels.ColorLabels'>, False, {'members
[app] emitting event: 'autodoc-skip-member'('module', 'Dict', typing.Dict, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', 'List', typing.List, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', 'Optional', typing.Optional, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', 'Path', <class 'pathlib.Path'>, False, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', 'Registrable', <class 'dh_segment_torch.config.registrable.Registrable'>, False, {'member
[app] emitting event: 'autodoc-skip-member'('module', 'Set', typing.Set, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', 'Sized', <class 'collections.abc.Sized'>, True, {'members': <object object at 0x7f0547171
[app] emitting event: 'autodoc-skip-member'('module', 'Tuple', typing.Tuple, False, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', 'Union', typing.Union, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', '__builtins__', {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and 
[app] emitting event: 'autodoc-skip-member'('module', '__cached__', '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/__pycache__/color_lab
[app] emitting event: 'autodoc-skip-member'('module', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', '__file__', '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/color_labels.py', True,
[app] emitting event: 'autodoc-skip-member'('module', '__loader__', <_frozen_importlib_external.SourceFileLoader object at 0x7f054702b890>, Tru
[app] emitting event: 'autodoc-skip-member'('module', '__name__', 'dh_segment_torch.data.color_labels', True, {'members': <object object at 0x7
[app] emitting event: 'autodoc-skip-member'('module', '__package__', 'dh_segment_torch.data', True, {'members': <object object at 0x7f054717117
[app] emitting event: 'autodoc-skip-member'('module', '__spec__', ModuleSpec(name='dh_segment_torch.data.color_labels', loader=<_frozen_importl
[app] emitting event: 'autodoc-skip-member'('module', 'all_one_hot_and_colors', <function all_one_hot_and_colors at 0x7f0531132680>, True, {'me
[app] emitting event: 'autodoc-skip-member'('module', 'get_all_one_hots', <function get_all_one_hots at 0x7f0531132710>, True, {'members': <obj
[app] emitting event: 'autodoc-skip-member'('module', 'json', <module 'json' from '/home/raph/.conda/envs/dh_segment_torch/lib/python3.7/json/_
[app] emitting event: 'autodoc-skip-member'('module', 'logger', <Logger dh_segment_torch.data.color_labels (WARNING)>, True, {'members': <objec
[app] emitting event: 'autodoc-skip-member'('module', 'logging', <module 'logging' from '/home/raph/.conda/envs/dh_segment_torch/lib/python3.7/
[app] emitting event: 'autodoc-skip-member'('module', 'n_colors', <function n_colors at 0x7f0547037440>, True, {'members': <object object at 0x
[app] emitting event: 'autodoc-skip-member'('module', 'np', <module 'numpy' from '/home/raph/.local/lib/python3.7/site-packages/numpy/__init__.
[app] emitting event: 'autodoc-skip-member'('module', 'os', <module 'os' from '/home/raph/.conda/envs/dh_segment_torch/lib/python3.7/os.py'>, F
[app] emitting event: 'autodoc-skip-member'('module', 'parse_and_validate_color', <function parse_and_validate_color at 0x7f05311259e0>, True, 
[app] emitting event: 'autodoc-skip-member'('module', 'parse_validate_one_hot', <function parse_validate_one_hot at 0x7f054701ff80>, True, {'me
[autodoc] from dh_segment_torch.data.color_labels import ColorLabels
[autodoc] import dh_segment_torch.data.color_labels => <module 'dh_segment_torch.data.color_labels' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/color_labels.py'>
[autodoc] getattr(_, 'ColorLabels')
[autodoc] => <class 'dh_segment_torch.data.color_labels.ColorLabels'>
[app] emitting event: 'autodoc-before-process-signature'(<function ColorLabels.__init__ at 0x7f053116fd40>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.color_labels.ColorLabels', <class 'dh_segment_torch.data.color_labe
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.color_labels.ColorLabels', <class 'dh_segment_torch.data.color_labe
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', '\n    Possible implementations:\n\n    * :meth:`"text" <.ColorLabels.from_labe
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function ColorLabels.__init__ at 0x7f053116fd40>, True, {'members': <object o
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.color_labels', True, {'members': <object object at 0x
[app] emitting event: 'autodoc-skip-member'('class', '__repr__', <function ColorLabels.__repr__ at 0x7f0531132170>, True, {'members': <object o
[app] emitting event: 'autodoc-skip-member'('class', '__str__', <function ColorLabels.__str__ at 0x7f0531132200>, True, {'members': <object obj
[app] emitting event: 'autodoc-skip-member'('class', '_check_empty_labels_one_hot', <function ColorLabels._check_empty_labels_one_hot at 0x7f05
[app] emitting event: 'autodoc-skip-member'('class', 'default_implementation', 'json', True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', 'from_colors', <bound method ColorLabels.from_colors of <class 'dh_segment_torch.data.colo
[app] emitting event: 'autodoc-skip-member'('class', 'from_colors_multilabel', <bound method ColorLabels.from_colors_multilabel of <class 'dh_s
[app] emitting event: 'autodoc-skip-member'('class', 'from_filter_by_colors', <bound method ColorLabels.from_filter_by_colors of <class 'dh_seg
[app] emitting event: 'autodoc-skip-member'('class', 'from_labels', <bound method ColorLabels.from_labels of <class 'dh_segment_torch.data.colo
[app] emitting event: 'autodoc-skip-member'('class', 'from_labels_json_file', <bound method ColorLabels.from_labels_json_file of <class 'dh_seg
[app] emitting event: 'autodoc-skip-member'('class', 'from_labels_multilabel', <bound method ColorLabels.from_labels_multilabel of <class 'dh_s
[app] emitting event: 'autodoc-skip-member'('class', 'from_labels_text_file', <bound method ColorLabels.from_labels_text_file of <class 'dh_seg
[app] emitting event: 'autodoc-skip-member'('class', 'from_list_of_color_labels', <bound method ColorLabels.from_list_of_color_labels of <class
[app] emitting event: 'autodoc-skip-member'('class', 'multilabel', <property object at 0x7f0547034530>, True, {'members': <object object at 0x7
[app] emitting event: 'autodoc-skip-member'('class', 'num_classes', <property object at 0x7f0532649650>, True, {'members': <object object at 0x
[app] emitting event: 'autodoc-skip-member'('class', 'to_json', <function ColorLabels.to_json at 0x7f05311320e0>, True, {'members': <object obj
[autodoc] from dh_segment_torch.data.color_labels import ColorLabels.from_labels_json_file
[autodoc] import dh_segment_torch.data.color_labels => <module 'dh_segment_torch.data.color_labels' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/color_labels.py'>
[autodoc] getattr(_, 'ColorLabels')
[autodoc] => <class 'dh_segment_torch.data.color_labels.ColorLabels'>
[autodoc] getattr(_, 'from_labels_json_file')
[autodoc] => <bound method ColorLabels.from_labels_json_file of <class 'dh_segment_torch.data.color_labels.ColorLabels'>>
[app] emitting event: 'autodoc-before-process-signature'(<bound method ColorLabels.from_labels_json_file of <class 'dh_segment_torch.data.color_labels.Color
[app] emitting event: 'autodoc-process-signature'('method', 'dh_segment_torch.data.color_labels.ColorLabels.from_labels_json_file', <bound method Col
[app] emitting event: 'autodoc-process-docstring'('method', 'dh_segment_torch.data.color_labels.ColorLabels.from_labels_json_file', <bound method Col
[autodoc] from dh_segment_torch.data.color_labels import ColorLabels.from_labels_text_file
[autodoc] import dh_segment_torch.data.color_labels => <module 'dh_segment_torch.data.color_labels' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/color_labels.py'>
[autodoc] getattr(_, 'ColorLabels')
[autodoc] => <class 'dh_segment_torch.data.color_labels.ColorLabels'>
[autodoc] getattr(_, 'from_labels_text_file')
[autodoc] => <bound method ColorLabels.from_labels_text_file of <class 'dh_segment_torch.data.color_labels.ColorLabels'>>
[app] emitting event: 'autodoc-before-process-signature'(<bound method ColorLabels.from_labels_text_file of <class 'dh_segment_torch.data.color_labels.Color
[app] emitting event: 'autodoc-process-signature'('method', 'dh_segment_torch.data.color_labels.ColorLabels.from_labels_text_file', <bound method Col
[app] emitting event: 'autodoc-process-docstring'('method', 'dh_segment_torch.data.color_labels.ColorLabels.from_labels_text_file', <bound method Col
[autodoc] from dh_segment_torch.data.color_labels import Path
[autodoc] import dh_segment_torch.data.color_labels => <module 'dh_segment_torch.data.color_labels' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/color_labels.py'>
[autodoc] getattr(_, 'Path')
[autodoc] => <class 'pathlib.Path'>
[autodoc] from dh_segment_torch.data.color_labels import Registrable
[autodoc] import dh_segment_torch.data.color_labels => <module 'dh_segment_torch.data.color_labels' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/color_labels.py'>
[autodoc] getattr(_, 'Registrable')
[autodoc] => <class 'dh_segment_torch.config.registrable.Registrable'>
[autodoc] from dh_segment_torch.data.color_labels import Tuple
[autodoc] import dh_segment_torch.data.color_labels => <module 'dh_segment_torch.data.color_labels' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/color_labels.py'>
[autodoc] getattr(_, 'Tuple')
[autodoc] => typing.Tuple
[autodoc] output:

.. py:module:: dh_segment_torch.data.color_labels


.. py:class:: ColorLabels(colors, one_hot_encoding=None, labels=None)
   :module: dh_segment_torch.data.color_labels

   Possible implementations:

   * :meth:`"text" <.ColorLabels.from_labels_text_file>` from a text file
   * :meth:`"json" <.ColorLabels.from_labels_json_file>` from a json file
   * :meth:`"labels_list" <.ColorLabels.from_list_of_color_labels>` from a json file
   * :meth:`"colors" <.ColorLabels.from_colors>` from a json file
   * :meth:`"colors_multilabel" <.ColorLabels.from_colors_multilabel>` from a json file
   * :meth:`"labels" <.ColorLabels.from_labels>` from a json file
   * :meth:`"labels_multilabel" <.ColorLabels.from_labels_multilabel>` from a json file




   .. py:method:: ColorLabels.from_labels_json_file(label_json_file)
      :module: dh_segment_torch.data.color_labels
      :classmethod:

      Same a text

      :type label_json_file: :py:data:`~typing.Union`\[:py:class:`str`, :py:class:`~pathlib.Path`]
      :param label_json_file:
      :return:


   .. py:method:: ColorLabels.from_labels_text_file(label_text_file, labels=None)
      :module: dh_segment_torch.data.color_labels
      :classmethod:

      From label text file

      :type label_text_file: :py:data:`~typing.Union`\[:py:class:`str`, :py:class:`~pathlib.Path`]
      :param label_text_file:
      :type labels: :py:data:`~typing.Optional`\[:py:class:`~typing.List`\[:py:class:`str`]]
      :param labels:
      :return:

[app] emitting event: 'object-description-transform'('py', 'method', <desc_content: <paragraph...><field_list...>>)
[app] emitting event: 'object-description-transform'('py', 'method', <desc_content: <paragraph...><field_list...>>)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: <paragraph...><bullet_list...><index...><desc...><index. ...>)
[autodoc] /home/raph/phd/dhSegment-torch/docs/data.rst:7: input:
.. autoclass:: dh_segment_torch.data.datasets.dataset.Dataset
    :members:

    .. automethod:: __init__

[autodoc] from dh_segment_torch.data.datasets.dataset import Dataset
[autodoc] import dh_segment_torch.data.datasets.dataset => <module 'dh_segment_torch.data.datasets.dataset' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/datasets/dataset.py'>
[autodoc] getattr(_, 'Dataset')
[autodoc] => <class 'dh_segment_torch.data.datasets.dataset.Dataset'>
[app] emitting event: 'autodoc-before-process-signature'(<function Dataset.__init__ at 0x7f04dafed830>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.datasets.dataset.Dataset', <class 'dh_segment_torch.data.datasets.d
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.datasets.dataset.Dataset', <class 'dh_segment_torch.data.datasets.d
[app] emitting event: 'autodoc-skip-member'('class', '__abstractmethods__', frozenset(), True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', '\n    Doc\n    ', True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Dataset.__init__ at 0x7f04dafed830>, True, {'members': <object objec
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.datasets.dataset', True, {'members': <object object a
[app] emitting event: 'autodoc-skip-member'('class', '_abc_impl', <_abc_data object at 0x7f04b5e83930>, True, {'members': <object object at 0x7
[app] emitting event: 'autodoc-skip-member'('class', 'check_filenames_exist', <function Dataset.check_filenames_exist at 0x7f04b5e49b90>, True,
[app] emitting event: 'autodoc-skip-member'('class', 'num_images', <property object at 0x7f04daf73ef0>, True, {'members': <object object at 0x7
[autodoc] output:

.. py:class:: Dataset(data, base_dir=None, image_base_dir=None, label_base_dir=None, repeat_dataset=1)
   :module: dh_segment_torch.data.datasets.dataset

   Doc

   .. automethod:: __init__
[autodoc] /home/raph/phd/dhSegment-torch/docs/data.rst:10: input:
.. automethod:: __init__
[autodoc] from dh_segment_torch.data.datasets.dataset import Dataset.__init__
[autodoc] import dh_segment_torch.data.datasets.dataset => <module 'dh_segment_torch.data.datasets.dataset' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/datasets/dataset.py'>
[autodoc] getattr(_, 'Dataset')
[autodoc] => <class 'dh_segment_torch.data.datasets.dataset.Dataset'>
[autodoc] getattr(_, '__init__')
[autodoc] => <function Dataset.__init__ at 0x7f04dafed830>
[app] emitting event: 'autodoc-before-process-signature'(<function Dataset.__init__ at 0x7f04dafed830>, True)
[app] emitting event: 'autodoc-process-signature'('method', 'dh_segment_torch.data.datasets.dataset.Dataset.__init__', <function Dataset.__init__ at 
[app] emitting event: 'autodoc-process-docstring'('method', 'dh_segment_torch.data.datasets.dataset.Dataset.__init__', <function Dataset.__init__ at 
[autodoc] output:

.. py:method:: Dataset.__init__(data, base_dir=None, image_base_dir=None, label_base_dir=None, repeat_dataset=1)
   :module: dh_segment_torch.data.datasets.dataset

   Dataset

   :type data: :py:class:`~pandas.core.frame.DataFrame`
   :param data:
   :type base_dir: :py:data:`~typing.Union`\[:py:class:`str`, :py:class:`~pathlib.Path`, ``None``]
   :param base_dir:
   :type image_base_dir: :py:data:`~typing.Union`\[:py:class:`str`, :py:class:`~pathlib.Path`, ``None``]
   :param image_base_dir:
   :type label_base_dir: :py:data:`~typing.Union`\[:py:class:`str`, :py:class:`~pathlib.Path`, ``None``]
   :param label_base_dir:
   :type repeat_dataset: :py:class:`int`
   :param repeat_dataset:

[app] emitting event: 'object-description-transform'('py', 'method', <desc_content: <paragraph...><field_list...>>)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: <paragraph...><index...><desc...>>)
[autodoc] /home/raph/phd/dhSegment-torch/docs/data.rst:12: input:
.. automodule:: dh_segment_torch.data.transforms
    :members:
[autodoc] import dh_segment_torch.data.transforms
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[app] emitting event: 'autodoc-process-signature'('module', 'dh_segment_torch.data.transforms', <module 'dh_segment_torch.data.transforms' from '/hom
[app] emitting event: 'autodoc-process-docstring'('module', 'dh_segment_torch.data.transforms', <module 'dh_segment_torch.data.transforms' from '/hom
[app] emitting event: 'autodoc-skip-member'('module', 'Transform', <class 'dh_segment_torch.data.transforms.transform.Transform'>, False, {'mem
[app] emitting event: 'autodoc-skip-member'('module', 'SampleToPatches', <class 'dh_segment_torch.data.transforms.extract_patches.SampleToPatch
[app] emitting event: 'autodoc-skip-member'('module', 'FixedResize', <class 'dh_segment_torch.data.transforms.fixed_resize.FixedResize'>, False
[app] emitting event: 'autodoc-skip-member'('module', 'FixedSizeResize', <class 'dh_segment_torch.data.transforms.fixed_size_resize.FixedSizeRe
[app] emitting event: 'autodoc-skip-member'('module', 'FixedSizeRotateCrop', <class 'dh_segment_torch.data.transforms.fixed_size_rotate_crop.Fi
[app] emitting event: 'autodoc-skip-member'('module', 'RotateNoCrop', <class 'dh_segment_torch.data.transforms.rotate_no_crop.RotateNoCrop'>, F
[app] emitting event: 'autodoc-skip-member'('module', 'Blur', <class 'dh_segment_torch.data.transforms.albumentation.Blur'>, False, {'members':
[app] emitting event: 'autodoc-skip-member'('module', 'CLAHE', <class 'dh_segment_torch.data.transforms.albumentation.CLAHE'>, False, {'members
[app] emitting event: 'autodoc-skip-member'('module', 'CenterCrop', <class 'dh_segment_torch.data.transforms.albumentation.CenterCrop'>, False,
[app] emitting event: 'autodoc-skip-member'('module', 'ChannelDropout', <class 'dh_segment_torch.data.transforms.albumentation.ChannelDropout'>
[app] emitting event: 'autodoc-skip-member'('module', 'ChannelShuffle', <class 'dh_segment_torch.data.transforms.albumentation.ChannelShuffle'>
[app] emitting event: 'autodoc-skip-member'('module', 'CoarseDropout', <class 'dh_segment_torch.data.transforms.albumentation.CoarseDropout'>, 
[app] emitting event: 'autodoc-skip-member'('module', 'Compose', <class 'dh_segment_torch.data.transforms.albumentation.Compose'>, False, {'mem
[app] emitting event: 'autodoc-skip-member'('module', 'Crop', <class 'dh_segment_torch.data.transforms.albumentation.Crop'>, False, {'members':
[app] emitting event: 'autodoc-skip-member'('module', 'CropNonEmptyMaskIfExists', <class 'dh_segment_torch.data.transforms.albumentation.CropNo
[app] emitting event: 'autodoc-skip-member'('module', 'Cutout', <class 'dh_segment_torch.data.transforms.albumentation.Cutout'>, False, {'membe
[app] emitting event: 'autodoc-skip-member'('module', 'Downscale', <class 'dh_segment_torch.data.transforms.albumentation.Downscale'>, False, {
[app] emitting event: 'autodoc-skip-member'('module', 'DualTransform', <class 'albumentations.core.transforms_interface.DualTransform'>, False,
[app] emitting event: 'autodoc-skip-member'('module', 'ElasticTransform', <class 'dh_segment_torch.data.transforms.albumentation.ElasticTransfo
[app] emitting event: 'autodoc-skip-member'('module', 'Equalize', <class 'dh_segment_torch.data.transforms.albumentation.Equalize'>, False, {'m
[app] emitting event: 'autodoc-skip-member'('module', 'FancyPCA', <class 'dh_segment_torch.data.transforms.albumentation.FancyPCA'>, False, {'m
[app] emitting event: 'autodoc-skip-member'('module', 'Flip', <class 'dh_segment_torch.data.transforms.albumentation.Flip'>, False, {'members':
[app] emitting event: 'autodoc-skip-member'('module', 'FromFloat', <class 'dh_segment_torch.data.transforms.albumentation.FromFloat'>, False, {
[app] emitting event: 'autodoc-skip-member'('module', 'GaussNoise', <class 'dh_segment_torch.data.transforms.albumentation.GaussNoise'>, False,
[app] emitting event: 'autodoc-skip-member'('module', 'GaussianBlur', <class 'dh_segment_torch.data.transforms.albumentation.GaussianBlur'>, Fa
[app] emitting event: 'autodoc-skip-member'('module', 'GlassBlur', <class 'dh_segment_torch.data.transforms.albumentation.GlassBlur'>, False, {
[app] emitting event: 'autodoc-skip-member'('module', 'GridDistortion', <class 'dh_segment_torch.data.transforms.albumentation.GridDistortion'>
[app] emitting event: 'autodoc-skip-member'('module', 'GridDropout', <class 'dh_segment_torch.data.transforms.albumentation.GridDropout'>, Fals
[app] emitting event: 'autodoc-skip-member'('module', 'HorizontalFlip', <class 'dh_segment_torch.data.transforms.albumentation.HorizontalFlip'>
[app] emitting event: 'autodoc-skip-member'('module', 'HueSaturationValue', <class 'dh_segment_torch.data.transforms.albumentation.HueSaturatio
[app] emitting event: 'autodoc-skip-member'('module', 'ISONoise', <class 'dh_segment_torch.data.transforms.albumentation.ISONoise'>, False, {'m
[app] emitting event: 'autodoc-skip-member'('module', 'ImageCompression', <class 'dh_segment_torch.data.transforms.albumentation.ImageCompressi
[app] emitting event: 'autodoc-skip-member'('module', 'ImageOnlyTransform', <class 'dh_segment_torch.data.transforms.albumentation.ImageOnlyTra
[app] emitting event: 'autodoc-skip-member'('module', 'InvertImg', <class 'dh_segment_torch.data.transforms.albumentation.InvertImg'>, False, {
[app] emitting event: 'autodoc-skip-member'('module', 'JpegCompression', <class 'dh_segment_torch.data.transforms.albumentation.JpegCompression
[app] emitting event: 'autodoc-skip-member'('module', 'Lambda', <class 'dh_segment_torch.data.transforms.albumentation.Lambda'>, False, {'membe
[app] emitting event: 'autodoc-skip-member'('module', 'LongestMaxSize', <class 'dh_segment_torch.data.transforms.albumentation.LongestMaxSize'>
[app] emitting event: 'autodoc-skip-member'('module', 'MaskDropout', <class 'dh_segment_torch.data.transforms.albumentation.MaskDropout'>, Fals
[app] emitting event: 'autodoc-skip-member'('module', 'MedianBlur', <class 'dh_segment_torch.data.transforms.albumentation.MedianBlur'>, False,
[app] emitting event: 'autodoc-skip-member'('module', 'MotionBlur', <class 'dh_segment_torch.data.transforms.albumentation.MotionBlur'>, False,
[app] emitting event: 'autodoc-skip-member'('module', 'MultiplicativeNoise', <class 'dh_segment_torch.data.transforms.albumentation.Multiplicat
[app] emitting event: 'autodoc-skip-member'('module', 'NoOp', <class 'dh_segment_torch.data.transforms.albumentation.NoOp'>, False, {'members':
[app] emitting event: 'autodoc-skip-member'('module', 'Normalize', <class 'dh_segment_torch.data.transforms.albumentation.Normalize'>, False, {
[app] emitting event: 'autodoc-skip-member'('module', 'OneOf', <class 'dh_segment_torch.data.transforms.albumentation.OneOf'>, False, {'members
[app] emitting event: 'autodoc-skip-member'('module', 'OpticalDistortion', <class 'dh_segment_torch.data.transforms.albumentation.OpticalDistor
[app] emitting event: 'autodoc-skip-member'('module', 'PadIfNeeded', <class 'dh_segment_torch.data.transforms.albumentation.PadIfNeeded'>, Fals
[app] emitting event: 'autodoc-skip-member'('module', 'Posterize', <class 'dh_segment_torch.data.transforms.albumentation.Posterize'>, False, {
[app] emitting event: 'autodoc-skip-member'('module', 'RGBShift', <class 'dh_segment_torch.data.transforms.albumentation.RGBShift'>, False, {'m
[app] emitting event: 'autodoc-skip-member'('module', 'RandomBrightnessContrast', <class 'dh_segment_torch.data.transforms.albumentation.Random
[app] emitting event: 'autodoc-skip-member'('module', 'RandomCrop', <class 'dh_segment_torch.data.transforms.albumentation.RandomCrop'>, False,
[app] emitting event: 'autodoc-skip-member'('module', 'RandomCropNearBBox', <class 'dh_segment_torch.data.transforms.albumentation.RandomCropNe
[app] emitting event: 'autodoc-skip-member'('module', 'RandomFog', <class 'dh_segment_torch.data.transforms.albumentation.RandomFog'>, False, {
[app] emitting event: 'autodoc-skip-member'('module', 'RandomGamma', <class 'dh_segment_torch.data.transforms.albumentation.RandomGamma'>, Fals
[app] emitting event: 'autodoc-skip-member'('module', 'RandomGridShuffle', <class 'dh_segment_torch.data.transforms.albumentation.RandomGridShu
[app] emitting event: 'autodoc-skip-member'('module', 'RandomRain', <class 'dh_segment_torch.data.transforms.albumentation.RandomRain'>, False,
[app] emitting event: 'autodoc-skip-member'('module', 'RandomResizedCrop', <class 'dh_segment_torch.data.transforms.albumentation.RandomResized
[app] emitting event: 'autodoc-skip-member'('module', 'RandomRotate90', <class 'dh_segment_torch.data.transforms.albumentation.RandomRotate90'>
[app] emitting event: 'autodoc-skip-member'('module', 'RandomScale', <class 'dh_segment_torch.data.transforms.albumentation.RandomScale'>, Fals
[app] emitting event: 'autodoc-skip-member'('module', 'RandomShadow', <class 'dh_segment_torch.data.transforms.albumentation.RandomShadow'>, Fa
[app] emitting event: 'autodoc-skip-member'('module', 'RandomSizedBBoxSafeCrop', <class 'dh_segment_torch.data.transforms.albumentation.RandomS
[app] emitting event: 'autodoc-skip-member'('module', 'RandomSizedCrop', <class 'dh_segment_torch.data.transforms.albumentation.RandomSizedCrop
[app] emitting event: 'autodoc-skip-member'('module', 'RandomSnow', <class 'dh_segment_torch.data.transforms.albumentation.RandomSnow'>, False,
[app] emitting event: 'autodoc-skip-member'('module', 'RandomSunFlare', <class 'dh_segment_torch.data.transforms.albumentation.RandomSunFlare'>
[app] emitting event: 'autodoc-skip-member'('module', 'Resize', <class 'dh_segment_torch.data.transforms.albumentation.Resize'>, False, {'membe
[app] emitting event: 'autodoc-skip-member'('module', 'Rotate', <class 'dh_segment_torch.data.transforms.albumentation.Rotate'>, False, {'membe
[app] emitting event: 'autodoc-skip-member'('module', 'ShiftScaleRotate', <class 'dh_segment_torch.data.transforms.albumentation.ShiftScaleRota
[app] emitting event: 'autodoc-skip-member'('module', 'SmallestMaxSize', <class 'dh_segment_torch.data.transforms.albumentation.SmallestMaxSize
[app] emitting event: 'autodoc-skip-member'('module', 'Solarize', <class 'dh_segment_torch.data.transforms.albumentation.Solarize'>, False, {'m
[app] emitting event: 'autodoc-skip-member'('module', 'ToFloat', <class 'dh_segment_torch.data.transforms.albumentation.ToFloat'>, False, {'mem
[app] emitting event: 'autodoc-skip-member'('module', 'ToGray', <class 'dh_segment_torch.data.transforms.albumentation.ToGray'>, False, {'membe
[app] emitting event: 'autodoc-skip-member'('module', 'ToSepia', <class 'dh_segment_torch.data.transforms.albumentation.ToSepia'>, False, {'mem
[app] emitting event: 'autodoc-skip-member'('module', 'Transpose', <class 'dh_segment_torch.data.transforms.albumentation.Transpose'>, False, {
[app] emitting event: 'autodoc-skip-member'('module', 'VerticalFlip', <class 'dh_segment_torch.data.transforms.albumentation.VerticalFlip'>, Fa
[app] emitting event: 'autodoc-skip-member'('module', 'BaseRandomSizedCrop', <class 'dh_segment_torch.data.transforms.albumentation.BaseRandomS
[app] emitting event: 'autodoc-skip-member'('module', 'IAAAdditiveGaussianNoise', <class 'dh_segment_torch.data.transforms.albumentation_imgaug
[app] emitting event: 'autodoc-skip-member'('module', 'IAAAffine', <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAAAffine'>, F
[app] emitting event: 'autodoc-skip-member'('module', 'IAACropAndPad', <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAACropAnd
[app] emitting event: 'autodoc-skip-member'('module', 'IAAEmboss', <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAAEmboss'>, F
[app] emitting event: 'autodoc-skip-member'('module', 'IAAFliplr', <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAAFliplr'>, F
[app] emitting event: 'autodoc-skip-member'('module', 'IAAFlipud', <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAAFlipud'>, F
[app] emitting event: 'autodoc-skip-member'('module', 'IAAPerspective', <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAAPerspe
[app] emitting event: 'autodoc-skip-member'('module', 'IAAPiecewiseAffine', <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAAPi
[app] emitting event: 'autodoc-skip-member'('module', 'IAASharpen', <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAASharpen'>,
[app] emitting event: 'autodoc-skip-member'('module', 'IAASuperpixels', <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAASuperp
[app] emitting event: 'autodoc-skip-member'('module', 'Assign', <class 'dh_segment_torch.data.transforms.assign_labels.Assign'>, False, {'membe
[app] emitting event: 'autodoc-skip-member'('module', 'AssignLabel', <class 'dh_segment_torch.data.transforms.assign_labels.AssignLabel'>, Fals
[app] emitting event: 'autodoc-skip-member'('module', 'AssignMultilabel', <class 'dh_segment_torch.data.transforms.assign_labels.AssignMultilab
[autodoc] from dh_segment_torch.data.transforms import Assign
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Assign')
[autodoc] => <class 'dh_segment_torch.data.transforms.assign_labels.Assign'>
[app] emitting event: 'autodoc-before-process-signature'(<class 'dh_segment_torch.data.transforms.assign_labels.Assign'>, False)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Assign', <class 'dh_segment_torch.data.transforms.assign
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Assign', <class 'dh_segment_torch.data.transforms.assign
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.assign_labels', True, {'members': <object 
[app] emitting event: 'autodoc-skip-member'('class', 'apply', <function Assign.apply at 0x7f04e494e9e0>, True, {'members': <object object at 0x
[app] emitting event: 'autodoc-skip-member'('class', 'first_phase', <function Assign.first_phase at 0x7f04e494e4d0>, True, {'members': <object 
[app] emitting event: 'autodoc-skip-member'('class', 'second_phase', <function Assign.second_phase at 0x7f04e494e830>, True, {'members': <objec
[autodoc] from dh_segment_torch.data.transforms import AssignLabel
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'AssignLabel')
[autodoc] => <class 'dh_segment_torch.data.transforms.assign_labels.AssignLabel'>
[app] emitting event: 'autodoc-before-process-signature'(<function AssignLabel.__init__ at 0x7f04e494ec20>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.AssignLabel', <class 'dh_segment_torch.data.transforms.a
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.AssignLabel', <class 'dh_segment_torch.data.transforms.a
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', '\n    Converts the RGB image to a HxWxC image with onehot encoding in C dimens
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function AssignLabel.__init__ at 0x7f04e494ec20>, True, {'members': <object o
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.assign_labels', True, {'members': <object 
[app] emitting event: 'autodoc-skip-member'('class', 'apply', <function AssignLabel.apply at 0x7f04e49530e0>, True, {'members': <object object 
[app] emitting event: 'autodoc-skip-member'('class', 'first_phase', <function AssignLabel.first_phase at 0x7f04e494ed40>, True, {'members': <ob
[app] emitting event: 'autodoc-skip-member'('class', 'second_phase', <function AssignLabel.second_phase at 0x7f04e494eef0>, True, {'members': <
[autodoc] from dh_segment_torch.data.transforms import AssignMultilabel
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'AssignMultilabel')
[autodoc] => <class 'dh_segment_torch.data.transforms.assign_labels.AssignMultilabel'>
[app] emitting event: 'autodoc-before-process-signature'(<function AssignMultilabel.__init__ at 0x7f04e4953200>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.AssignMultilabel', <class 'dh_segment_torch.data.transfo
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.AssignMultilabel', <class 'dh_segment_torch.data.transfo
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', '\n    Converts the RGB image to a HxWxC image with onehot encoding in C dimens
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function AssignMultilabel.__init__ at 0x7f04e4953200>, True, {'members': <obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.assign_labels', True, {'members': <object 
[app] emitting event: 'autodoc-skip-member'('class', 'apply', <function AssignMultilabel.apply at 0x7f04e4953830>, True, {'members': <object ob
[app] emitting event: 'autodoc-skip-member'('class', 'first_phase', <function AssignMultilabel.first_phase at 0x7f04e4953560>, True, {'members'
[app] emitting event: 'autodoc-skip-member'('class', 'second_phase', <function AssignMultilabel.second_phase at 0x7f04e4953710>, True, {'member
[autodoc] from dh_segment_torch.data.transforms import BaseRandomSizedCrop
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'BaseRandomSizedCrop')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.BaseRandomSizedCrop'>
[app] emitting event: 'autodoc-before-process-signature'(<function BaseRandomSizedCrop.__init__ at 0x7f04b69fda70>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.BaseRandomSizedCrop', <class 'dh_segment_torch.data.tran
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.BaseRandomSizedCrop', <class 'dh_segment_torch.data.tran
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function BaseRandomSizedCrop.__init__ at 0x7f04b69fda70>, True, {'members': <
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import Blur
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Blur')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.Blur'>
[app] emitting event: 'autodoc-before-process-signature'(<function Blur.__init__ at 0x7f04b7848830>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Blur', <class 'dh_segment_torch.data.transforms.albument
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Blur', <class 'dh_segment_torch.data.transforms.albument
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', '\n    Cf. :class:`~albumentations.augmentations.transforms.Blur` for arguments
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Blur.__init__ at 0x7f04b7848830>, True, {'members': <object object a
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import CLAHE
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'CLAHE')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.CLAHE'>
[app] emitting event: 'autodoc-before-process-signature'(<function CLAHE.__init__ at 0x7f04b7848710>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.CLAHE', <class 'dh_segment_torch.data.transforms.albumen
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.CLAHE', <class 'dh_segment_torch.data.transforms.albumen
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function CLAHE.__init__ at 0x7f04b7848710>, True, {'members': <object object 
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import CenterCrop
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'CenterCrop')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.CenterCrop'>
[app] emitting event: 'autodoc-before-process-signature'(<function CenterCrop.__init__ at 0x7f04e495b0e0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.CenterCrop', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.CenterCrop', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function CenterCrop.__init__ at 0x7f04e495b0e0>, True, {'members': <object ob
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import ChannelDropout
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'ChannelDropout')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.ChannelDropout'>
[app] emitting event: 'autodoc-before-process-signature'(<function ChannelDropout.__init__ at 0x7f0548efb710>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.ChannelDropout', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.ChannelDropout', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function ChannelDropout.__init__ at 0x7f0548efb710>, True, {'members': <objec
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import ChannelShuffle
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'ChannelShuffle')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.ChannelShuffle'>
[app] emitting event: 'autodoc-before-process-signature'(<function ChannelShuffle.__init__ at 0x7f0548f033b0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.ChannelShuffle', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.ChannelShuffle', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function ChannelShuffle.__init__ at 0x7f0548f033b0>, True, {'members': <objec
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import CoarseDropout
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'CoarseDropout')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.CoarseDropout'>
[app] emitting event: 'autodoc-before-process-signature'(<function CoarseDropout.__init__ at 0x7f0548f03830>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.CoarseDropout', <class 'dh_segment_torch.data.transforms
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.CoarseDropout', <class 'dh_segment_torch.data.transforms
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function CoarseDropout.__init__ at 0x7f0548f03830>, True, {'members': <object
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import Compose
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Compose')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.Compose'>
[app] emitting event: 'autodoc-before-process-signature'(<function Compose.__init__ at 0x7f04e495b3b0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Compose', <class 'dh_segment_torch.data.transforms.album
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Compose', <class 'dh_segment_torch.data.transforms.album
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Compose.__init__ at 0x7f04e495b3b0>, True, {'members': <object objec
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import Crop
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Crop')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.Crop'>
[app] emitting event: 'autodoc-before-process-signature'(<function Crop.__init__ at 0x7f0548f087a0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Crop', <class 'dh_segment_torch.data.transforms.albument
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Crop', <class 'dh_segment_torch.data.transforms.albument
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Crop.__init__ at 0x7f0548f087a0>, True, {'members': <object object a
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import CropNonEmptyMaskIfExists
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'CropNonEmptyMaskIfExists')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.CropNonEmptyMaskIfExists'>
[app] emitting event: 'autodoc-before-process-signature'(<function CropNonEmptyMaskIfExists.__init__ at 0x7f0548f08d40>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.CropNonEmptyMaskIfExists', <class 'dh_segment_torch.data
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.CropNonEmptyMaskIfExists', <class 'dh_segment_torch.data
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function CropNonEmptyMaskIfExists.__init__ at 0x7f0548f08d40>, True, {'member
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import Cutout
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Cutout')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.Cutout'>
[app] emitting event: 'autodoc-before-process-signature'(<function Cutout.__init__ at 0x7f0548f0e200>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Cutout', <class 'dh_segment_torch.data.transforms.albume
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Cutout', <class 'dh_segment_torch.data.transforms.albume
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Cutout.__init__ at 0x7f0548f0e200>, True, {'members': <object object
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import Downscale
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Downscale')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.Downscale'>
[app] emitting event: 'autodoc-before-process-signature'(<function Downscale.__init__ at 0x7f0548f10320>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Downscale', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Downscale', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Downscale.__init__ at 0x7f0548f10320>, True, {'members': <object obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import DualTransform
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'DualTransform')
[autodoc] => <class 'albumentations.core.transforms_interface.DualTransform'>
[app] emitting event: 'autodoc-before-process-signature'(<function BasicTransform.__init__ at 0x7f04e4833f80>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.DualTransform', <class 'albumentations.core.transforms_i
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.DualTransform', <class 'albumentations.core.transforms_i
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', 'Transform for segmentation task.', True, {'members': <object object at 0x7f054
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'albumentations.core.transforms_interface', True, {'members': <object object
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_bbox', <function DualTransform.apply_to_bbox at 0x7f0548eeaa70>, True, {'members
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_bboxes', <function DualTransform.apply_to_bboxes at 0x7f0548eeab90>, True, {'mem
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_keypoint', <function DualTransform.apply_to_keypoint at 0x7f0548eeab00>, True, {
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_keypoints', <function DualTransform.apply_to_keypoints at 0x7f0548eeac20>, True,
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_mask', <function DualTransform.apply_to_mask at 0x7f0548eeacb0>, True, {'members
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_masks', <function DualTransform.apply_to_masks at 0x7f0548eead40>, True, {'membe
[app] emitting event: 'autodoc-skip-member'('class', 'targets', <property object at 0x7f0548ee7410>, True, {'members': <object object at 0x7f05
[autodoc] from dh_segment_torch.data.transforms import ElasticTransform
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'ElasticTransform')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.ElasticTransform'>
[app] emitting event: 'autodoc-before-process-signature'(<function ElasticTransform.__init__ at 0x7f0548f1a0e0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.ElasticTransform', <class 'dh_segment_torch.data.transfo
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.ElasticTransform', <class 'dh_segment_torch.data.transfo
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function ElasticTransform.__init__ at 0x7f0548f1a0e0>, True, {'members': <obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import Equalize
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Equalize')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.Equalize'>
[app] emitting event: 'autodoc-before-process-signature'(<function Equalize.__init__ at 0x7f0548f22e60>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Equalize', <class 'dh_segment_torch.data.transforms.albu
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Equalize', <class 'dh_segment_torch.data.transforms.albu
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Equalize.__init__ at 0x7f0548f22e60>, True, {'members': <object obje
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import FancyPCA
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'FancyPCA')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.FancyPCA'>
[app] emitting event: 'autodoc-before-process-signature'(<function FancyPCA.__init__ at 0x7f0548f22050>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.FancyPCA', <class 'dh_segment_torch.data.transforms.albu
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.FancyPCA', <class 'dh_segment_torch.data.transforms.albu
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function FancyPCA.__init__ at 0x7f0548f22050>, True, {'members': <object obje
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import FixedResize
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'FixedResize')
[autodoc] => <class 'dh_segment_torch.data.transforms.fixed_resize.FixedResize'>
[app] emitting event: 'autodoc-before-process-signature'(<function FixedResize.__init__ at 0x7f04e4953950>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.FixedResize', <class 'dh_segment_torch.data.transforms.f
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.FixedResize', <class 'dh_segment_torch.data.transforms.f
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function FixedResize.__init__ at 0x7f04e4953950>, True, {'members': <object o
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.fixed_resize', True, {'members': <object o
[app] emitting event: 'autodoc-skip-member'('class', '_compute_new_hw', <function FixedResize._compute_new_hw at 0x7f04e4956e60>, True, {'membe
[app] emitting event: 'autodoc-skip-member'('class', 'apply', <function FixedResize.apply at 0x7f04e49440e0>, True, {'members': <object object 
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_bbox', <function FixedResize.apply_to_bbox at 0x7f04e4945c20>, True, {'members':
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_keypoint', <function FixedResize.apply_to_keypoint at 0x7f04e4956d40>, True, {'m
[app] emitting event: 'autodoc-skip-member'('class', 'get_transform_init_args_names', <function FixedResize.get_transform_init_args_names at 0x
[autodoc] from dh_segment_torch.data.transforms import FixedSizeResize
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'FixedSizeResize')
[autodoc] => <class 'dh_segment_torch.data.transforms.fixed_size_resize.FixedSizeResize'>
[app] emitting event: 'autodoc-before-process-signature'(<function FixedSizeResize.__init__ at 0x7f04b69fdd40>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.FixedSizeResize', <class 'dh_segment_torch.data.transfor
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.FixedSizeResize', <class 'dh_segment_torch.data.transfor
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function FixedSizeResize.__init__ at 0x7f04b69fdd40>, True, {'members': <obje
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.fixed_size_resize', True, {'members': <obj
[app] emitting event: 'autodoc-skip-member'('class', 'apply', <function FixedSizeResize.apply at 0x7f04b69fddd0>, True, {'members': <object obj
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_bbox', <function FixedSizeResize.apply_to_bbox at 0x7f04b69fde60>, True, {'membe
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_keypoint', <function FixedSizeResize.apply_to_keypoint at 0x7f04b69fdef0>, True,
[app] emitting event: 'autodoc-skip-member'('class', 'get_transform_init_args_names', <function FixedSizeResize.get_transform_init_args_names a
[autodoc] from dh_segment_torch.data.transforms import FixedSizeRotateCrop
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'FixedSizeRotateCrop')
[autodoc] => <class 'dh_segment_torch.data.transforms.fixed_size_rotate_crop.FixedSizeRotateCrop'>
[app] emitting event: 'autodoc-before-process-signature'(<function Rotate.__init__ at 0x7f04b69fd560>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.FixedSizeRotateCrop', <class 'dh_segment_torch.data.tran
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.FixedSizeRotateCrop', <class 'dh_segment_torch.data.tran
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.fixed_size_rotate_crop', True, {'members':
[app] emitting event: 'autodoc-skip-member'('class', 'apply', <function FixedSizeRotateCrop.apply at 0x7f04b6a0f7a0>, True, {'members': <object
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_bbox', <function FixedSizeRotateCrop.apply_to_bbox at 0x7f04b6a0ff80>, True, {'m
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_keypoint', <function FixedSizeRotateCrop.apply_to_keypoint at 0x7f04b6a13050>, T
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_mask', <function FixedSizeRotateCrop.apply_to_mask at 0x7f04b6a0fef0>, True, {'m
[autodoc] from dh_segment_torch.data.transforms import Flip
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Flip')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.Flip'>
[app] emitting event: 'autodoc-before-process-signature'(<function Flip.__init__ at 0x7f0548f22dd0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Flip', <class 'dh_segment_torch.data.transforms.albument
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Flip', <class 'dh_segment_torch.data.transforms.albument
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Flip.__init__ at 0x7f0548f22dd0>, True, {'members': <object object a
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import FromFloat
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'FromFloat')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.FromFloat'>
[app] emitting event: 'autodoc-before-process-signature'(<function FromFloat.__init__ at 0x7f0548f248c0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.FromFloat', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.FromFloat', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function FromFloat.__init__ at 0x7f0548f248c0>, True, {'members': <object obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import GaussNoise
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'GaussNoise')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.GaussNoise'>
[app] emitting event: 'autodoc-before-process-signature'(<function GaussNoise.__init__ at 0x7f0548ea9950>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.GaussNoise', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.GaussNoise', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function GaussNoise.__init__ at 0x7f0548ea9950>, True, {'members': <object ob
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import GaussianBlur
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'GaussianBlur')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.GaussianBlur'>
[app] emitting event: 'autodoc-before-process-signature'(<function GaussianBlur.__init__ at 0x7f0548ea9440>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.GaussianBlur', <class 'dh_segment_torch.data.transforms.
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.GaussianBlur', <class 'dh_segment_torch.data.transforms.
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function GaussianBlur.__init__ at 0x7f0548ea9440>, True, {'members': <object 
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import GlassBlur
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'GlassBlur')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.GlassBlur'>
[app] emitting event: 'autodoc-before-process-signature'(<function GlassBlur.__init__ at 0x7f0548ef7290>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.GlassBlur', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.GlassBlur', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function GlassBlur.__init__ at 0x7f0548ef7290>, True, {'members': <object obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import GridDistortion
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'GridDistortion')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.GridDistortion'>
[app] emitting event: 'autodoc-before-process-signature'(<function GridDistortion.__init__ at 0x7f04b69f1050>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.GridDistortion', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.GridDistortion', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function GridDistortion.__init__ at 0x7f04b69f1050>, True, {'members': <objec
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import GridDropout
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'GridDropout')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.GridDropout'>
[app] emitting event: 'autodoc-before-process-signature'(<function GridDropout.__init__ at 0x7f04b69f10e0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.GridDropout', <class 'dh_segment_torch.data.transforms.a
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.GridDropout', <class 'dh_segment_torch.data.transforms.a
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function GridDropout.__init__ at 0x7f04b69f10e0>, True, {'members': <object o
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import HorizontalFlip
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'HorizontalFlip')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.HorizontalFlip'>
[app] emitting event: 'autodoc-before-process-signature'(<function HorizontalFlip.__init__ at 0x7f04b69f1170>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.HorizontalFlip', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.HorizontalFlip', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function HorizontalFlip.__init__ at 0x7f04b69f1170>, True, {'members': <objec
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import HueSaturationValue
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'HueSaturationValue')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.HueSaturationValue'>
[app] emitting event: 'autodoc-before-process-signature'(<function HueSaturationValue.__init__ at 0x7f04b69f1200>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.HueSaturationValue', <class 'dh_segment_torch.data.trans
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.HueSaturationValue', <class 'dh_segment_torch.data.trans
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function HueSaturationValue.__init__ at 0x7f04b69f1200>, True, {'members': <o
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import IAAAdditiveGaussianNoise
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'IAAAdditiveGaussianNoise')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAAAdditiveGaussianNoise'>
[app] emitting event: 'autodoc-before-process-signature'(<function IAAAdditiveGaussianNoise.__init__ at 0x7f04e494b3b0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.IAAAdditiveGaussianNoise', <class 'dh_segment_torch.data
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.IAAAdditiveGaussianNoise', <class 'dh_segment_torch.data
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function IAAAdditiveGaussianNoise.__init__ at 0x7f04e494b3b0>, True, {'member
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation_imgaug', True, {'members': <
[autodoc] from dh_segment_torch.data.transforms import IAAAffine
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'IAAAffine')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAAAffine'>
[app] emitting event: 'autodoc-before-process-signature'(<function IAAAffine.__init__ at 0x7f04e494b560>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.IAAAffine', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.IAAAffine', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function IAAAffine.__init__ at 0x7f04e494b560>, True, {'members': <object obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation_imgaug', True, {'members': <
[autodoc] from dh_segment_torch.data.transforms import IAACropAndPad
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'IAACropAndPad')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAACropAndPad'>
[app] emitting event: 'autodoc-before-process-signature'(<function IAACropAndPad.__init__ at 0x7f04e494b680>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.IAACropAndPad', <class 'dh_segment_torch.data.transforms
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.IAACropAndPad', <class 'dh_segment_torch.data.transforms
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function IAACropAndPad.__init__ at 0x7f04e494b680>, True, {'members': <object
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation_imgaug', True, {'members': <
[autodoc] from dh_segment_torch.data.transforms import IAAEmboss
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'IAAEmboss')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAAEmboss'>
[app] emitting event: 'autodoc-before-process-signature'(<function IAAEmboss.__init__ at 0x7f04e494b7a0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.IAAEmboss', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.IAAEmboss', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function IAAEmboss.__init__ at 0x7f04e494b7a0>, True, {'members': <object obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation_imgaug', True, {'members': <
[autodoc] from dh_segment_torch.data.transforms import IAAFliplr
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'IAAFliplr')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAAFliplr'>
[app] emitting event: 'autodoc-before-process-signature'(<function IAAFliplr.__init__ at 0x7f04e494b8c0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.IAAFliplr', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.IAAFliplr', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function IAAFliplr.__init__ at 0x7f04e494b8c0>, True, {'members': <object obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation_imgaug', True, {'members': <
[autodoc] from dh_segment_torch.data.transforms import IAAFlipud
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'IAAFlipud')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAAFlipud'>
[app] emitting event: 'autodoc-before-process-signature'(<function IAAFlipud.__init__ at 0x7f04e494b9e0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.IAAFlipud', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.IAAFlipud', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function IAAFlipud.__init__ at 0x7f04e494b9e0>, True, {'members': <object obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation_imgaug', True, {'members': <
[autodoc] from dh_segment_torch.data.transforms import IAAPerspective
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'IAAPerspective')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAAPerspective'>
[app] emitting event: 'autodoc-before-process-signature'(<function IAAPerspective.__init__ at 0x7f04e494bb00>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.IAAPerspective', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.IAAPerspective', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function IAAPerspective.__init__ at 0x7f04e494bb00>, True, {'members': <objec
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation_imgaug', True, {'members': <
[autodoc] from dh_segment_torch.data.transforms import IAAPiecewiseAffine
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'IAAPiecewiseAffine')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAAPiecewiseAffine'>
[app] emitting event: 'autodoc-before-process-signature'(<function IAAPiecewiseAffine.__init__ at 0x7f04e494bc20>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.IAAPiecewiseAffine', <class 'dh_segment_torch.data.trans
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.IAAPiecewiseAffine', <class 'dh_segment_torch.data.trans
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function IAAPiecewiseAffine.__init__ at 0x7f04e494bc20>, True, {'members': <o
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation_imgaug', True, {'members': <
[autodoc] from dh_segment_torch.data.transforms import IAASharpen
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'IAASharpen')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAASharpen'>
[app] emitting event: 'autodoc-before-process-signature'(<function IAASharpen.__init__ at 0x7f04e494bd40>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.IAASharpen', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.IAASharpen', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function IAASharpen.__init__ at 0x7f04e494bd40>, True, {'members': <object ob
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation_imgaug', True, {'members': <
[autodoc] from dh_segment_torch.data.transforms import IAASuperpixels
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'IAASuperpixels')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation_imgaug.IAASuperpixels'>
[app] emitting event: 'autodoc-before-process-signature'(<function IAASuperpixels.__init__ at 0x7f04e494be60>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.IAASuperpixels', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.IAASuperpixels', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function IAASuperpixels.__init__ at 0x7f04e494be60>, True, {'members': <objec
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation_imgaug', True, {'members': <
[autodoc] from dh_segment_torch.data.transforms import ISONoise
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'ISONoise')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.ISONoise'>
[app] emitting event: 'autodoc-before-process-signature'(<function ISONoise.__init__ at 0x7f04b69f1290>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.ISONoise', <class 'dh_segment_torch.data.transforms.albu
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.ISONoise', <class 'dh_segment_torch.data.transforms.albu
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function ISONoise.__init__ at 0x7f04b69f1290>, True, {'members': <object obje
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import ImageCompression
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'ImageCompression')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.ImageCompression'>
[app] emitting event: 'autodoc-before-process-signature'(<function ImageCompression.__init__ at 0x7f04b69f1320>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.ImageCompression', <class 'dh_segment_torch.data.transfo
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.ImageCompression', <class 'dh_segment_torch.data.transfo
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function ImageCompression.__init__ at 0x7f04b69f1320>, True, {'members': <obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import ImageOnlyTransform
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'ImageOnlyTransform')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.ImageOnlyTransform'>
[app] emitting event: 'autodoc-before-process-signature'(<function ImageOnlyTransform.__init__ at 0x7f04b69f13b0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.ImageOnlyTransform', <class 'dh_segment_torch.data.trans
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.ImageOnlyTransform', <class 'dh_segment_torch.data.trans
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function ImageOnlyTransform.__init__ at 0x7f04b69f13b0>, True, {'members': <o
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import InvertImg
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'InvertImg')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.InvertImg'>
[app] emitting event: 'autodoc-before-process-signature'(<function InvertImg.__init__ at 0x7f04b69f1440>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.InvertImg', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.InvertImg', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function InvertImg.__init__ at 0x7f04b69f1440>, True, {'members': <object obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import JpegCompression
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'JpegCompression')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.JpegCompression'>
[app] emitting event: 'autodoc-before-process-signature'(<function JpegCompression.__init__ at 0x7f04b69f14d0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.JpegCompression', <class 'dh_segment_torch.data.transfor
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.JpegCompression', <class 'dh_segment_torch.data.transfor
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function JpegCompression.__init__ at 0x7f04b69f14d0>, True, {'members': <obje
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import Lambda
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Lambda')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.Lambda'>
[app] emitting event: 'autodoc-before-process-signature'(<function Lambda.__init__ at 0x7f04b69f1560>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Lambda', <class 'dh_segment_torch.data.transforms.albume
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Lambda', <class 'dh_segment_torch.data.transforms.albume
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Lambda.__init__ at 0x7f04b69f1560>, True, {'members': <object object
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import LongestMaxSize
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'LongestMaxSize')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.LongestMaxSize'>
[app] emitting event: 'autodoc-before-process-signature'(<function LongestMaxSize.__init__ at 0x7f04b69f15f0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.LongestMaxSize', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.LongestMaxSize', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function LongestMaxSize.__init__ at 0x7f04b69f15f0>, True, {'members': <objec
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import MaskDropout
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'MaskDropout')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.MaskDropout'>
[app] emitting event: 'autodoc-before-process-signature'(<function MaskDropout.__init__ at 0x7f04b69f1680>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.MaskDropout', <class 'dh_segment_torch.data.transforms.a
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.MaskDropout', <class 'dh_segment_torch.data.transforms.a
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function MaskDropout.__init__ at 0x7f04b69f1680>, True, {'members': <object o
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import MedianBlur
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'MedianBlur')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.MedianBlur'>
[app] emitting event: 'autodoc-before-process-signature'(<function MedianBlur.__init__ at 0x7f04b69f1710>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.MedianBlur', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.MedianBlur', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function MedianBlur.__init__ at 0x7f04b69f1710>, True, {'members': <object ob
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import MotionBlur
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'MotionBlur')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.MotionBlur'>
[app] emitting event: 'autodoc-before-process-signature'(<function MotionBlur.__init__ at 0x7f04b69f17a0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.MotionBlur', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.MotionBlur', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function MotionBlur.__init__ at 0x7f04b69f17a0>, True, {'members': <object ob
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import MultiplicativeNoise
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'MultiplicativeNoise')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.MultiplicativeNoise'>
[app] emitting event: 'autodoc-before-process-signature'(<function MultiplicativeNoise.__init__ at 0x7f04b69f1830>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.MultiplicativeNoise', <class 'dh_segment_torch.data.tran
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.MultiplicativeNoise', <class 'dh_segment_torch.data.tran
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function MultiplicativeNoise.__init__ at 0x7f04b69f1830>, True, {'members': <
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import NoOp
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'NoOp')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.NoOp'>
[app] emitting event: 'autodoc-before-process-signature'(<function NoOp.__init__ at 0x7f04b69f18c0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.NoOp', <class 'dh_segment_torch.data.transforms.albument
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.NoOp', <class 'dh_segment_torch.data.transforms.albument
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function NoOp.__init__ at 0x7f04b69f18c0>, True, {'members': <object object a
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import Normalize
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Normalize')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.Normalize'>
[app] emitting event: 'autodoc-before-process-signature'(<function Normalize.__init__ at 0x7f04b69f1950>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Normalize', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Normalize', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Normalize.__init__ at 0x7f04b69f1950>, True, {'members': <object obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import OneOf
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'OneOf')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.OneOf'>
[app] emitting event: 'autodoc-before-process-signature'(<function OneOf.__init__ at 0x7f04e495b200>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.OneOf', <class 'dh_segment_torch.data.transforms.albumen
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.OneOf', <class 'dh_segment_torch.data.transforms.albumen
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function OneOf.__init__ at 0x7f04e495b200>, True, {'members': <object object 
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import OpticalDistortion
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'OpticalDistortion')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.OpticalDistortion'>
[app] emitting event: 'autodoc-before-process-signature'(<function OpticalDistortion.__init__ at 0x7f04b69f19e0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.OpticalDistortion', <class 'dh_segment_torch.data.transf
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.OpticalDistortion', <class 'dh_segment_torch.data.transf
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function OpticalDistortion.__init__ at 0x7f04b69f19e0>, True, {'members': <ob
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import PadIfNeeded
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'PadIfNeeded')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.PadIfNeeded'>
[app] emitting event: 'autodoc-before-process-signature'(<function PadIfNeeded.__init__ at 0x7f04b69f1a70>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.PadIfNeeded', <class 'dh_segment_torch.data.transforms.a
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.PadIfNeeded', <class 'dh_segment_torch.data.transforms.a
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function PadIfNeeded.__init__ at 0x7f04b69f1a70>, True, {'members': <object o
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import Posterize
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Posterize')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.Posterize'>
[app] emitting event: 'autodoc-before-process-signature'(<function Posterize.__init__ at 0x7f04b69f1b00>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Posterize', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Posterize', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Posterize.__init__ at 0x7f04b69f1b00>, True, {'members': <object obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RGBShift
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RGBShift')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RGBShift'>
[app] emitting event: 'autodoc-before-process-signature'(<function RGBShift.__init__ at 0x7f04b69f1b90>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RGBShift', <class 'dh_segment_torch.data.transforms.albu
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RGBShift', <class 'dh_segment_torch.data.transforms.albu
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RGBShift.__init__ at 0x7f04b69f1b90>, True, {'members': <object obje
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RandomBrightnessContrast
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RandomBrightnessContrast')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RandomBrightnessContrast'>
[app] emitting event: 'autodoc-before-process-signature'(<function RandomBrightnessContrast.__init__ at 0x7f04b69f1c20>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RandomBrightnessContrast', <class 'dh_segment_torch.data
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RandomBrightnessContrast', <class 'dh_segment_torch.data
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RandomBrightnessContrast.__init__ at 0x7f04b69f1c20>, True, {'member
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RandomCrop
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RandomCrop')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RandomCrop'>
[app] emitting event: 'autodoc-before-process-signature'(<function RandomCrop.__init__ at 0x7f04b69f1cb0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RandomCrop', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RandomCrop', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RandomCrop.__init__ at 0x7f04b69f1cb0>, True, {'members': <object ob
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RandomCropNearBBox
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RandomCropNearBBox')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RandomCropNearBBox'>
[app] emitting event: 'autodoc-before-process-signature'(<function RandomCropNearBBox.__init__ at 0x7f04b69f1d40>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RandomCropNearBBox', <class 'dh_segment_torch.data.trans
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RandomCropNearBBox', <class 'dh_segment_torch.data.trans
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RandomCropNearBBox.__init__ at 0x7f04b69f1d40>, True, {'members': <o
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RandomFog
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RandomFog')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RandomFog'>
[app] emitting event: 'autodoc-before-process-signature'(<function RandomFog.__init__ at 0x7f04b69f1dd0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RandomFog', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RandomFog', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RandomFog.__init__ at 0x7f04b69f1dd0>, True, {'members': <object obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RandomGamma
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RandomGamma')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RandomGamma'>
[app] emitting event: 'autodoc-before-process-signature'(<function RandomGamma.__init__ at 0x7f04b69f1e60>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RandomGamma', <class 'dh_segment_torch.data.transforms.a
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RandomGamma', <class 'dh_segment_torch.data.transforms.a
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RandomGamma.__init__ at 0x7f04b69f1e60>, True, {'members': <object o
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RandomGridShuffle
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RandomGridShuffle')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RandomGridShuffle'>
[app] emitting event: 'autodoc-before-process-signature'(<function RandomGridShuffle.__init__ at 0x7f04b69f1ef0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RandomGridShuffle', <class 'dh_segment_torch.data.transf
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RandomGridShuffle', <class 'dh_segment_torch.data.transf
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RandomGridShuffle.__init__ at 0x7f04b69f1ef0>, True, {'members': <ob
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RandomRain
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RandomRain')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RandomRain'>
[app] emitting event: 'autodoc-before-process-signature'(<function RandomRain.__init__ at 0x7f04b69f1f80>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RandomRain', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RandomRain', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RandomRain.__init__ at 0x7f04b69f1f80>, True, {'members': <object ob
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RandomResizedCrop
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RandomResizedCrop')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RandomResizedCrop'>
[app] emitting event: 'autodoc-before-process-signature'(<function RandomResizedCrop.__init__ at 0x7f04b69fd050>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RandomResizedCrop', <class 'dh_segment_torch.data.transf
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RandomResizedCrop', <class 'dh_segment_torch.data.transf
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RandomResizedCrop.__init__ at 0x7f04b69fd050>, True, {'members': <ob
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RandomRotate90
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RandomRotate90')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RandomRotate90'>
[app] emitting event: 'autodoc-before-process-signature'(<function RandomRotate90.__init__ at 0x7f04b69fd0e0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RandomRotate90', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RandomRotate90', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RandomRotate90.__init__ at 0x7f04b69fd0e0>, True, {'members': <objec
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RandomScale
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RandomScale')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RandomScale'>
[app] emitting event: 'autodoc-before-process-signature'(<function RandomScale.__init__ at 0x7f04b69fd170>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RandomScale', <class 'dh_segment_torch.data.transforms.a
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RandomScale', <class 'dh_segment_torch.data.transforms.a
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RandomScale.__init__ at 0x7f04b69fd170>, True, {'members': <object o
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RandomShadow
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RandomShadow')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RandomShadow'>
[app] emitting event: 'autodoc-before-process-signature'(<function RandomShadow.__init__ at 0x7f04b69fd200>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RandomShadow', <class 'dh_segment_torch.data.transforms.
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RandomShadow', <class 'dh_segment_torch.data.transforms.
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RandomShadow.__init__ at 0x7f04b69fd200>, True, {'members': <object 
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RandomSizedBBoxSafeCrop
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RandomSizedBBoxSafeCrop')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RandomSizedBBoxSafeCrop'>
[app] emitting event: 'autodoc-before-process-signature'(<function RandomSizedBBoxSafeCrop.__init__ at 0x7f04b69fd290>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RandomSizedBBoxSafeCrop', <class 'dh_segment_torch.data.
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RandomSizedBBoxSafeCrop', <class 'dh_segment_torch.data.
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RandomSizedBBoxSafeCrop.__init__ at 0x7f04b69fd290>, True, {'members
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RandomSizedCrop
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RandomSizedCrop')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RandomSizedCrop'>
[app] emitting event: 'autodoc-before-process-signature'(<function RandomSizedCrop.__init__ at 0x7f04b69fd320>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RandomSizedCrop', <class 'dh_segment_torch.data.transfor
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RandomSizedCrop', <class 'dh_segment_torch.data.transfor
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RandomSizedCrop.__init__ at 0x7f04b69fd320>, True, {'members': <obje
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RandomSnow
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RandomSnow')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RandomSnow'>
[app] emitting event: 'autodoc-before-process-signature'(<function RandomSnow.__init__ at 0x7f04b69fd3b0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RandomSnow', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RandomSnow', <class 'dh_segment_torch.data.transforms.al
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RandomSnow.__init__ at 0x7f04b69fd3b0>, True, {'members': <object ob
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RandomSunFlare
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RandomSunFlare')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.RandomSunFlare'>
[app] emitting event: 'autodoc-before-process-signature'(<function RandomSunFlare.__init__ at 0x7f04b69fd440>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RandomSunFlare', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RandomSunFlare', <class 'dh_segment_torch.data.transform
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function RandomSunFlare.__init__ at 0x7f04b69fd440>, True, {'members': <objec
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import Resize
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Resize')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.Resize'>
[app] emitting event: 'autodoc-before-process-signature'(<function Resize.__init__ at 0x7f04b69fd4d0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Resize', <class 'dh_segment_torch.data.transforms.albume
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Resize', <class 'dh_segment_torch.data.transforms.albume
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Resize.__init__ at 0x7f04b69fd4d0>, True, {'members': <object object
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import Rotate
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Rotate')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.Rotate'>
[app] emitting event: 'autodoc-before-process-signature'(<function Rotate.__init__ at 0x7f04b69fd560>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Rotate', <class 'dh_segment_torch.data.transforms.albume
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Rotate', <class 'dh_segment_torch.data.transforms.albume
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Rotate.__init__ at 0x7f04b69fd560>, True, {'members': <object object
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import RotateNoCrop
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'RotateNoCrop')
[autodoc] => <class 'dh_segment_torch.data.transforms.rotate_no_crop.RotateNoCrop'>
[app] emitting event: 'autodoc-before-process-signature'(<function Rotate.__init__ at 0x7f04b69fd560>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.RotateNoCrop', <class 'dh_segment_torch.data.transforms.
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.RotateNoCrop', <class 'dh_segment_torch.data.transforms.
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.rotate_no_crop', True, {'members': <object
[app] emitting event: 'autodoc-skip-member'('class', 'apply', <function RotateNoCrop.apply at 0x7f04b6a0fb90>, True, {'members': <object object
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_bbox', <function RotateNoCrop.apply_to_bbox at 0x7f04b6a0fcb0>, True, {'members'
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_keypoint', <function RotateNoCrop.apply_to_keypoint at 0x7f04b6a0fd40>, True, {'
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_mask', <function RotateNoCrop.apply_to_mask at 0x7f04b6a0fc20>, True, {'members'
[autodoc] from dh_segment_torch.data.transforms import SampleToPatches
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'SampleToPatches')
[autodoc] => <class 'dh_segment_torch.data.transforms.extract_patches.SampleToPatches'>
[app] emitting event: 'autodoc-before-process-signature'(<function SampleToPatches.__init__ at 0x7f04e4953dd0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.SampleToPatches', <class 'dh_segment_torch.data.transfor
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.SampleToPatches', <class 'dh_segment_torch.data.transfor
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', '\n    Needs numpy array as input.\n    ', True, {'members': <object object at 
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function SampleToPatches.__init__ at 0x7f04e4953dd0>, True, {'members': <obje
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.extract_patches', True, {'members': <objec
[app] emitting event: 'autodoc-skip-member'('class', 'apply', <function SampleToPatches.apply at 0x7f04e4953f80>, True, {'members': <object obj
[app] emitting event: 'autodoc-skip-member'('class', 'apply_to_mask', <function SampleToPatches.apply_to_mask at 0x7f04e4956170>, True, {'membe
[autodoc] from dh_segment_torch.data.transforms import ShiftScaleRotate
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'ShiftScaleRotate')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.ShiftScaleRotate'>
[app] emitting event: 'autodoc-before-process-signature'(<function ShiftScaleRotate.__init__ at 0x7f04b69fd5f0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.ShiftScaleRotate', <class 'dh_segment_torch.data.transfo
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.ShiftScaleRotate', <class 'dh_segment_torch.data.transfo
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function ShiftScaleRotate.__init__ at 0x7f04b69fd5f0>, True, {'members': <obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import SmallestMaxSize
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'SmallestMaxSize')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.SmallestMaxSize'>
[app] emitting event: 'autodoc-before-process-signature'(<function SmallestMaxSize.__init__ at 0x7f04b69fd680>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.SmallestMaxSize', <class 'dh_segment_torch.data.transfor
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.SmallestMaxSize', <class 'dh_segment_torch.data.transfor
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function SmallestMaxSize.__init__ at 0x7f04b69fd680>, True, {'members': <obje
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import Solarize
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Solarize')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.Solarize'>
[app] emitting event: 'autodoc-before-process-signature'(<function Solarize.__init__ at 0x7f04b69fd710>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Solarize', <class 'dh_segment_torch.data.transforms.albu
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Solarize', <class 'dh_segment_torch.data.transforms.albu
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Solarize.__init__ at 0x7f04b69fd710>, True, {'members': <object obje
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import ToFloat
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'ToFloat')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.ToFloat'>
[app] emitting event: 'autodoc-before-process-signature'(<function ToFloat.__init__ at 0x7f04b69fd7a0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.ToFloat', <class 'dh_segment_torch.data.transforms.album
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.ToFloat', <class 'dh_segment_torch.data.transforms.album
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function ToFloat.__init__ at 0x7f04b69fd7a0>, True, {'members': <object objec
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import ToGray
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'ToGray')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.ToGray'>
[app] emitting event: 'autodoc-before-process-signature'(<function ToGray.__init__ at 0x7f04b69fd830>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.ToGray', <class 'dh_segment_torch.data.transforms.albume
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.ToGray', <class 'dh_segment_torch.data.transforms.albume
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function ToGray.__init__ at 0x7f04b69fd830>, True, {'members': <object object
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import ToSepia
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'ToSepia')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.ToSepia'>
[app] emitting event: 'autodoc-before-process-signature'(<function ToSepia.__init__ at 0x7f04b69fd8c0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.ToSepia', <class 'dh_segment_torch.data.transforms.album
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.ToSepia', <class 'dh_segment_torch.data.transforms.album
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function ToSepia.__init__ at 0x7f04b69fd8c0>, True, {'members': <object objec
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import Transform
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Transform')
[autodoc] => <class 'dh_segment_torch.data.transforms.transform.Transform'>
[app] emitting event: 'autodoc-before-process-signature'(<class 'dh_segment_torch.data.transforms.transform.Transform'>, False)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Transform', <class 'dh_segment_torch.data.transforms.tra
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Transform', <class 'dh_segment_torch.data.transforms.tra
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.transform', True, {'members': <object obje
[autodoc] from dh_segment_torch.data.transforms import Transpose
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'Transpose')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.Transpose'>
[app] emitting event: 'autodoc-before-process-signature'(<function Transpose.__init__ at 0x7f04b69fd950>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.Transpose', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.Transpose', <class 'dh_segment_torch.data.transforms.alb
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Transpose.__init__ at 0x7f04b69fd950>, True, {'members': <object obj
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] from dh_segment_torch.data.transforms import VerticalFlip
[autodoc] import dh_segment_torch.data.transforms => <module 'dh_segment_torch.data.transforms' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/__init__.py'>
[autodoc] getattr(_, 'VerticalFlip')
[autodoc] => <class 'dh_segment_torch.data.transforms.albumentation.VerticalFlip'>
[app] emitting event: 'autodoc-before-process-signature'(<function VerticalFlip.__init__ at 0x7f04b69fd9e0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.data.transforms.VerticalFlip', <class 'dh_segment_torch.data.transforms.
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.data.transforms.VerticalFlip', <class 'dh_segment_torch.data.transforms.
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function VerticalFlip.__init__ at 0x7f04b69fd9e0>, True, {'members': <object 
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.data.transforms.albumentation', True, {'members': <object 
[autodoc] output:

.. py:module:: dh_segment_torch.data.transforms


.. py:class:: Assign()
   :module: dh_segment_torch.data.transforms


.. py:class:: AssignLabel(colors_array)
   :module: dh_segment_torch.data.transforms

   Converts the RGB image to a HxWxC image with onehot encoding in C dimension.

   :ivar color_array: the list of possible color codes with shape N x 3, with N the number of possible color codes.
   :vartype color_array: np.ndarray
   :ivar code_array: list of onehot encoded labels with shape N x C, with C
   the number of classes and N the number of possible color codes.
   :vartype code_array: np.ndarray


.. py:class:: AssignMultilabel(colors_array, onehot_label_array)
   :module: dh_segment_torch.data.transforms

   Converts the RGB image to a HxWxC image with onehot encoding in C dimension.

   :ivar color_array: the list of possible color codes with shape N x 3, with N the number of possible color codes.
   :vartype color_array: np.ndarray
   :ivar code_array: list of onehot encoded labels with shape N x C, with C
   the number of classes and N the number of possible color codes.
   :vartype code_array: np.ndarray


.. py:class:: BaseRandomSizedCrop(interpolation=1, always_apply=False, p=1.0)
   :module: dh_segment_torch.data.transforms


.. py:class:: Blur(blur_limit=7, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms

   Cf. :class:`~albumentations.augmentations.transforms.Blur` for arguments and usage.



.. py:class:: CLAHE(clip_limit=4.0, tile_grid_size=(8, 8), always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: CenterCrop(height, width, always_apply=False, p=1.0)
   :module: dh_segment_torch.data.transforms


.. py:class:: ChannelDropout(channel_drop_range=(1, 1), fill_value=0, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: ChannelShuffle(always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: CoarseDropout(max_holes=8, max_height=8, max_width=8, min_holes=None, min_height=None, min_width=None, fill_value=0, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: Compose(transforms, additional_targets=None, p=1.0)
   :module: dh_segment_torch.data.transforms


.. py:class:: Crop(x_min=0, y_min=0, x_max=1024, y_max=1024, always_apply=False, p=1.0)
   :module: dh_segment_torch.data.transforms


.. py:class:: CropNonEmptyMaskIfExists(height, width, ignore_values=None, ignore_channels=None, always_apply=False, p=1.0)
   :module: dh_segment_torch.data.transforms


.. py:class:: Cutout(num_holes=8, max_h_size=8, max_w_size=8, fill_value=0, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: Downscale(scale_min=0.25, scale_max=0.25, interpolation=0, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: DualTransform(always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms

   Transform for segmentation task.


.. py:class:: ElasticTransform(alpha=1, sigma=50, alpha_affine=50, interpolation=1, border_mode=0, value=None, mask_value=None, always_apply=False, approximate=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: Equalize(mode='cv', by_channels=True, mask_params=(), always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: FancyPCA(alpha=0.1, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: FixedResize(height=None, width=None, interpolation=1, always_apply=True, p=1)
   :module: dh_segment_torch.data.transforms


.. py:class:: FixedSizeResize(output_size, interpolation=1, always_apply=True, p=1)
   :module: dh_segment_torch.data.transforms


.. py:class:: FixedSizeRotateCrop(limit=90, interpolation=1, border_mode=0, value=None, mask_value=None, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: Flip(always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: FromFloat(dtype='uint16', max_value=None, always_apply=False, p=1.0)
   :module: dh_segment_torch.data.transforms


.. py:class:: GaussNoise(var_limit=(10.0, 50.0), mean=0, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: GaussianBlur(blur_limit=7, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: GlassBlur(sigma=0.7, max_delta=4, iterations=2, always_apply=False, mode='fast', p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: GridDistortion(num_steps=5, distort_limit=0.3, interpolation=1, border_mode=0, value=None, mask_value=None, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: GridDropout(ratio=0.5, unit_size_min=None, unit_size_max=None, holes_number_x=None, holes_number_y=None, shift_x=0, shift_y=0, random_offset=False, fill_value=0, mask_fill_value=None, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: HorizontalFlip(always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: HueSaturationValue(hue_shift_limit=20, sat_shift_limit=30, val_shift_limit=20, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: IAAAdditiveGaussianNoise(loc=0, scale=(2.55, 12.75), per_channel=False, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: IAAAffine(scale=1.0, translate_percent=None, translate_px=None, rotate=0.0, shear=0.0, order=1, cval=0, mode='reflect', always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: IAACropAndPad(px=None, percent=None, pad_mode='constant', pad_cval=0, keep_size=True, always_apply=False, p=1)
   :module: dh_segment_torch.data.transforms


.. py:class:: IAAEmboss(alpha=(0.2, 0.5), strength=(0.2, 0.7), always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: IAAFliplr(always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: IAAFlipud(always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: IAAPerspective(scale=(0.05, 0.1), keep_size=True, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: IAAPiecewiseAffine(scale=(0.03, 0.05), nb_rows=4, nb_cols=4, order=1, cval=0, mode='constant', always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: IAASharpen(alpha=(0.2, 0.5), lightness=(0.5, 1.0), always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: IAASuperpixels(p_replace=0.1, n_segments=100, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: ISONoise(color_shift=(0.01, 0.05), intensity=(0.1, 0.5), always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: ImageCompression(quality_lower=99, quality_upper=100, compression_type=0, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: ImageOnlyTransform(always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: InvertImg(always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: JpegCompression(quality_lower=99, quality_upper=100, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: Lambda(always_apply=False, p=1.0)
   :module: dh_segment_torch.data.transforms


.. py:class:: LongestMaxSize(max_size=1024, interpolation=1, always_apply=False, p=1)
   :module: dh_segment_torch.data.transforms


.. py:class:: MaskDropout(max_objects=1, image_fill_value=0, mask_fill_value=0, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: MedianBlur(blur_limit=7, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: MotionBlur(blur_limit=7, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: MultiplicativeNoise(multiplier=(0.9, 1.1), per_channel=False, elementwise=False, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: NoOp(always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225), max_pixel_value=255.0, always_apply=False, p=1.0)
   :module: dh_segment_torch.data.transforms


.. py:class:: OneOf(transforms, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: OpticalDistortion(distort_limit=0.05, shift_limit=0.05, interpolation=1, border_mode=0, value=None, mask_value=None, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: PadIfNeeded(min_height=1024, min_width=1024, border_mode=0, value=None, mask_value=None, always_apply=False, p=1.0)
   :module: dh_segment_torch.data.transforms


.. py:class:: Posterize(num_bits=4, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: RGBShift(r_shift_limit=20, g_shift_limit=20, b_shift_limit=20, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: RandomBrightnessContrast(brightness_limit=0.2, contrast_limit=0.2, brightness_by_max=True, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: RandomCrop(height, width, always_apply=False, p=1.0)
   :module: dh_segment_torch.data.transforms


.. py:class:: RandomCropNearBBox(max_part_shift=0.3, always_apply=False, p=1.0)
   :module: dh_segment_torch.data.transforms


.. py:class:: RandomFog(fog_coef_lower=0.3, fog_coef_upper=1, alpha_coef=0.08, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: RandomGamma(gamma_limit=(80, 120), eps=None, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: RandomGridShuffle(grid=(3, 3), always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: RandomRain(slant_lower=-10, slant_upper=10, drop_length=20, drop_width=1, drop_color=(200, 200, 200), blur_value=7, brightness_coefficient=0.7, rain_type=None, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: RandomResizedCrop(height, width, scale=(0.08, 1.0), ratio=(0.75, 1.3333333333333333), interpolation=1, always_apply=False, p=1.0)
   :module: dh_segment_torch.data.transforms


.. py:class:: RandomRotate90(always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: RandomScale(scale_limit=0.1, interpolation=1, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: RandomShadow(shadow_roi=(0, 0.5, 1, 1), num_shadows_lower=1, num_shadows_upper=2, shadow_dimension=5, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: RandomSizedBBoxSafeCrop(height, width, erosion_rate=0.0, interpolation=1, always_apply=False, p=1.0)
   :module: dh_segment_torch.data.transforms


.. py:class:: RandomSizedCrop(min_max_height, height, width, w2h_ratio=1.0, interpolation=1, always_apply=False, p=1.0)
   :module: dh_segment_torch.data.transforms


.. py:class:: RandomSnow(snow_point_lower=0.1, snow_point_upper=0.3, brightness_coeff=2.5, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: RandomSunFlare(flare_roi=(0, 0, 1, 0.5), angle_lower=0, angle_upper=1, num_flare_circles_lower=6, num_flare_circles_upper=10, src_radius=400, src_color=(255, 255, 255), always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: Resize(height, width, interpolation=1, always_apply=False, p=1)
   :module: dh_segment_torch.data.transforms


.. py:class:: Rotate(limit=90, interpolation=1, border_mode=0, value=None, mask_value=None, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: RotateNoCrop(limit=90, interpolation=1, border_mode=0, value=None, mask_value=None, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: SampleToPatches(patch_shape)
   :module: dh_segment_torch.data.transforms

   Needs numpy array as input.


.. py:class:: ShiftScaleRotate(shift_limit=0.0625, scale_limit=0.1, rotate_limit=45, interpolation=1, border_mode=0, value=None, mask_value=None, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: SmallestMaxSize(max_size=1024, interpolation=1, always_apply=False, p=1)
   :module: dh_segment_torch.data.transforms


.. py:class:: Solarize(threshold=128, always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: ToFloat(max_value=None, always_apply=False, p=1.0)
   :module: dh_segment_torch.data.transforms


.. py:class:: ToGray(always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: ToSepia(always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: Transform()
   :module: dh_segment_torch.data.transforms


.. py:class:: Transpose(always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms


.. py:class:: VerticalFlip(always_apply=False, p=0.5)
   :module: dh_segment_torch.data.transforms

[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: <paragraph...><field_list...><system_message...><paragra ...>)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: <paragraph...><field_list...><system_message...><paragra ...>)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: <paragraph...>>)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: <paragraph...>>)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: <paragraph...>>)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[i18n] PATCH: 'docutils.nodes.field_name' to have source and line: <field_name>Parameters</field_name>
[i18n] PATCH: 'docutils.nodes.field_name' to have source and line: <field_name>Returns</field_name>
[i18n] PATCH: 'docutils.nodes.field_name' to have source and line: <field_name>Parameters</field_name>
[i18n] PATCH: 'docutils.nodes.field_name' to have source and line: <field_name>Returns</field_name>
[i18n] PATCH: 'docutils.nodes.field_name' to have source and line: <field_name>Parameters</field_name>
[i18n] PATCH: 'docutils.nodes.field_name' to have source and line: <field_name>Variables</field_name>
[i18n] PATCH: 'docutils.nodes.field_name' to have source and line: <field_name>Variables</field_name>
[app] emitting event: 'doctree-read'(<document: <section "data"...>>,)
/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/assign_labels.py:docstring of dh_segment_torch.data.transforms.AssignLabel:6: (WARNING/2) Field list ends without a blank line; unexpected unindent. [filtered system message]
/home/raph/phd/dhSegment-torch/dh_segment_torch/data/transforms/assign_labels.py:docstring of dh_segment_torch.data.transforms.AssignMultilabel:6: (WARNING/2) Field list ends without a blank line; unexpected unindent. [filtered system message]
reading sources... [ 20%] generated/dh_segment_torch.nn.BCEWithLogitsLoss
[app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, 'generated/dh_segment_torch.nn.BCEW
[app] emitting event: 'source-read'('generated/dh_segment_torch.nn.BCEWithLogitsLoss', ['.. role:: hidden\n    :class: hidden-section\n
[autodoc] /home/raph/phd/dhSegment-torch/docs/generated/dh_segment_torch.nn.BCEWithLogitsLoss.rst:9: input:
.. autoclass:: BCEWithLogitsLoss

[autodoc] from dh_segment_torch.nn import BCEWithLogitsLoss
[autodoc] import dh_segment_torch.nn => <module 'dh_segment_torch.nn' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/nn/__init__.py'>
[autodoc] getattr(_, 'BCEWithLogitsLoss')
[autodoc] => <class 'dh_segment_torch.nn.loss.losses.BCEWithLogitsLoss'>
[app] emitting event: 'autodoc-before-process-signature'(<function BCEWithLogitsLoss.__init__ at 0x7f04b5e204d0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.nn.BCEWithLogitsLoss', <class 'dh_segment_torch.nn.loss.losses.BCEWithLo
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.nn.BCEWithLogitsLoss', <class 'dh_segment_torch.nn.loss.losses.BCEWithLo
[autodoc] output:

.. py:class:: BCEWithLogitsLoss(weights=None, size_average=None, reduction='mean', ignore_padding=False, margin=0)
   :module: dh_segment_torch.nn

   Binary Cross Entropy Loss with logits. Config type name: "bce_with_logits"

    C.f. :class:`torch.nn.BCEWithLogitsLoss` for this loss

   :type weights: :py:data:`~typing.Optional`\[:py:class:`~typing.List`\[:py:class:`float`]]
   :param weights: C.f. pytorch doc.
   :type size_average: :py:data:`~typing.Optional`\[:py:class:`bool`]
   :param size_average: C.f. pytorch doc.
   :type reduction: :py:class:`str`
   :param reduction: C.f. pytorch doc.
   :type ignore_padding: :py:class:`bool`
   :param ignore_padding: Whether to compute the loss ignoring the padding and margin.
   :type margin: :py:class:`int`
   :param margin: The margin size, only used if the padding is ignored in the computation.

[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: <paragraph...><block_quote...><field_list...>>)
[i18n] PATCH: 'docutils.nodes.field_name' to have source and line: <field_name>Parameters</field_name>
[app] emitting event: 'doctree-read'(<document: <section "bcewithlogitsloss"...>>,)
reading sources... [ 30%] generated/dh_segment_torch.nn.CombinedLoss
[app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, 'generated/dh_segment_torch.nn.Comb
[app] emitting event: 'source-read'('generated/dh_segment_torch.nn.CombinedLoss', ['.. role:: hidden\n    :class: hidden-section\n.. cu
[autodoc] /home/raph/phd/dhSegment-torch/docs/generated/dh_segment_torch.nn.CombinedLoss.rst:9: input:
.. autoclass:: CombinedLoss

[autodoc] from dh_segment_torch.nn import CombinedLoss
[autodoc] import dh_segment_torch.nn => <module 'dh_segment_torch.nn' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/nn/__init__.py'>
[autodoc] getattr(_, 'CombinedLoss')
[autodoc] => <class 'dh_segment_torch.nn.loss.losses.CombinedLoss'>
[app] emitting event: 'autodoc-before-process-signature'(<function CombinedLoss.__init__ at 0x7f04b60ff4d0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.nn.CombinedLoss', <class 'dh_segment_torch.nn.loss.losses.CombinedLoss'>
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.nn.CombinedLoss', <class 'dh_segment_torch.nn.loss.losses.CombinedLoss'>
[autodoc] output:

.. py:class:: CombinedLoss(losses, weights=None)
   :module: dh_segment_torch.nn

   Weighted combination of losses. Config type name: "combined"

   Combines several losses with pre-defined weights or equal weights by default.

   :type losses: :py:class:`~typing.List`\[:py:class:`~dh_segment_torch.nn.loss.losses.Loss`]
   :param losses: List of :class:`losses <.Loss>`.
   :type weights: :py:data:`~typing.Optional`\[:py:class:`~typing.List`\[:py:class:`float`]]
   :param weights: Optional weights list that should be the same size as the number of losses.

[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: <paragraph...><paragraph...><field_list...>>)
[i18n] PATCH: 'docutils.nodes.field_name' to have source and line: <field_name>Parameters</field_name>
[app] emitting event: 'doctree-read'(<document: <section "combinedloss"...>>,)
reading sources... [ 40%] generated/dh_segment_torch.nn.CrossEntropyLoss
[app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, 'generated/dh_segment_torch.nn.Cros
[app] emitting event: 'source-read'('generated/dh_segment_torch.nn.CrossEntropyLoss', ['.. role:: hidden\n    :class: hidden-section\n.
[autodoc] /home/raph/phd/dhSegment-torch/docs/generated/dh_segment_torch.nn.CrossEntropyLoss.rst:9: input:
.. autoclass:: CrossEntropyLoss

[autodoc] from dh_segment_torch.nn import CrossEntropyLoss
[autodoc] import dh_segment_torch.nn => <module 'dh_segment_torch.nn' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/nn/__init__.py'>
[autodoc] getattr(_, 'CrossEntropyLoss')
[autodoc] => <class 'dh_segment_torch.nn.loss.losses.CrossEntropyLoss'>
[app] emitting event: 'autodoc-before-process-signature'(<function CrossEntropyLoss.__init__ at 0x7f04b5e20440>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.nn.CrossEntropyLoss', <class 'dh_segment_torch.nn.loss.losses.CrossEntro
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.nn.CrossEntropyLoss', <class 'dh_segment_torch.nn.loss.losses.CrossEntro
[autodoc] output:

.. py:class:: CrossEntropyLoss(weights=None, size_average=None, ignore_index=-100, reduction='mean', ignore_padding=False, margin=0)
   :module: dh_segment_torch.nn

   Cross entropy loss. Config type name: "cross_entropy"

   C.f. :class:`torch.nn.CrossEntropyLoss` for this loss

   :type weights: :py:data:`~typing.Optional`\[:py:class:`~typing.List`\[:py:class:`float`]]
   :param weights: C.f. pytorch doc.
   :type size_average: :py:data:`~typing.Optional`\[:py:class:`bool`]
   :param size_average: C.f. pytorch doc.
   :type ignore_index: :py:class:`int`
   :param ignore_index: C.f. pytorch doc.
   :type reduction: :py:class:`str`
   :param reduction: C.f. pytorch doc.
   :type ignore_padding: :py:class:`bool`
   :param ignore_padding: Whether to compute the loss ignoring the padding and margin.
   :type margin: :py:class:`int`
   :param margin: The margin size, only used if the padding is ignored in the computation.

[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: <paragraph...><paragraph...><field_list...>>)
[i18n] PATCH: 'docutils.nodes.field_name' to have source and line: <field_name>Parameters</field_name>
[app] emitting event: 'doctree-read'(<document: <section "crossentropyloss"...>>,)
reading sources... [ 50%] generated/dh_segment_torch.nn.DiceLoss
[app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, 'generated/dh_segment_torch.nn.Dice
[app] emitting event: 'source-read'('generated/dh_segment_torch.nn.DiceLoss', ['.. role:: hidden\n    :class: hidden-section\n.. curren
[autodoc] /home/raph/phd/dhSegment-torch/docs/generated/dh_segment_torch.nn.DiceLoss.rst:9: input:
.. autoclass:: DiceLoss

[autodoc] from dh_segment_torch.nn import DiceLoss
[autodoc] import dh_segment_torch.nn => <module 'dh_segment_torch.nn' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/nn/__init__.py'>
[autodoc] getattr(_, 'DiceLoss')
[autodoc] => <class 'dh_segment_torch.nn.loss.losses.DiceLoss'>
[app] emitting event: 'autodoc-before-process-signature'(<function DiceLoss.__init__ at 0x7f04b5e20560>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.nn.DiceLoss', <class 'dh_segment_torch.nn.loss.losses.DiceLoss'>, {}, '(
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.nn.DiceLoss', <class 'dh_segment_torch.nn.loss.losses.DiceLoss'>, {}, ['
[autodoc] output:

.. py:class:: DiceLoss(smooth=1.0, ignore_padding=False, margin=0)
   :module: dh_segment_torch.nn

   Dice Coefficient Loss. Config type name: "dice"

   This loss penalizes the dissimilarity between the ground truth :math:`Y` and the prediction :math:`\hat{Y}` with a smoothing factor :math:`\alpha`, it is defined as:

   .. math::
       \text{loss}(Y, \hat{Y}) = 1-\frac{2 \left(\vert Y\cap \hat{Y} \vert + \alpha \right)}{\vert Y \vert + \vert \hat{Y} \vert + \alpha}

   It ressembles Intersection over Union (IoU), except that it counts true positives twice in the denominator.

   :type smooth: :py:class:`float`
   :param smooth: Smoothing ratio.
   :type ignore_padding: :py:class:`bool`
   :param ignore_padding: Whether to compute the loss ignoring the padding and margin.
   :type margin: :py:class:`int`
   :param margin: The margin size, only used if the padding is ignored in the computation.

[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: <paragraph...><paragraph...><math_block...><paragraph... ...>)
[i18n] PATCH: 'docutils.nodes.field_name' to have source and line: <field_name>Parameters</field_name>
[app] emitting event: 'doctree-read'(<document: <section "diceloss"...>>,)
reading sources... [ 60%] generated/dh_segment_torch.nn.TopologyLoss
[app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, 'generated/dh_segment_torch.nn.Topo
[app] emitting event: 'source-read'('generated/dh_segment_torch.nn.TopologyLoss', ['.. role:: hidden\n    :class: hidden-section\n.. cu
[autodoc] /home/raph/phd/dhSegment-torch/docs/generated/dh_segment_torch.nn.TopologyLoss.rst:9: input:
.. autoclass:: TopologyLoss

[autodoc] from dh_segment_torch.nn import TopologyLoss
[autodoc] import dh_segment_torch.nn => <module 'dh_segment_torch.nn' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/nn/__init__.py'>
[autodoc] getattr(_, 'TopologyLoss')
[autodoc] => <class 'dh_segment_torch.nn.loss.losses.TopologyLoss'>
[app] emitting event: 'autodoc-before-process-signature'(<function TopologyLoss.__init__ at 0x7f04b5e205f0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.nn.TopologyLoss', <class 'dh_segment_torch.nn.loss.losses.TopologyLoss'>
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.nn.TopologyLoss', <class 'dh_segment_torch.nn.loss.losses.TopologyLoss'>
[autodoc] output:

.. py:class:: TopologyLoss(layers_sel, labels_sel=None, multilabel=False, ignore_padding=False, margin=0)
   :module: dh_segment_torch.nn

   Topology loss. Config type name: "topology"

   Implementation of the loss presented in  `arXiv:1712.02190 <https://arxiv.org/abs/1712.02190>`__.

   For a selection of labels, it takes the corresponding ground truth and prediction probabilities,
   compute for a selection of layers levels of an imagenet pre-trained VGG19 the result of each probabilities map and
   finally compute the sum of RMSE.

   :type layers_sel: :py:data:`~typing.Union`\[:py:class:`int`, :py:class:`~typing.List`\[:py:class:`int`]]
   :param layers_sel: Single layer or list of layers for the VGG19 selection, can be in range [1,4].
   :type labels_sel: :py:data:`~typing.Optional`\[:py:class:`~typing.List`\[:py:class:`int`]]
   :param labels_sel: List of labels index selected.
   :type multilabel: :py:class:`bool`
   :param multilabel: Whether the model is multilabel.
   :type ignore_padding: :py:class:`bool`
   :param ignore_padding: Cannot be used with this loss.
   :type margin: :py:class:`int`
   :param margin: Not used.

[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: <paragraph...><paragraph...><paragraph...><field_list...>>)
[i18n] PATCH: 'docutils.nodes.field_name' to have source and line: <field_name>Parameters</field_name>
[app] emitting event: 'doctree-read'(<document: <section "topologyloss"...>>,)
reading sources... [ 70%] index
[app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, 'index')
[app] emitting event: 'source-read'('index', [".. dhSegment-torch documentation master file, created by\n   sphinx-quickstart on Fri Au
[app] emitting event: 'doctree-read'(<document: <comment...><section "welcome to dhsegment-torch's docum ...>,)
reading sources... [ 80%] loss
[app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, 'loss')
[app] emitting event: 'source-read'('loss', ['dh_segment_torch.nn.loss\n========================\n\n.. currentmodule:: dh_segment_torch
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: >)
[autodoc] from dh_segment_torch.nn import CombinedLoss
[autodoc] import dh_segment_torch.nn => <module 'dh_segment_torch.nn' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/nn/__init__.py'>
[autodoc] getattr(_, 'CombinedLoss')
[autodoc] => <class 'dh_segment_torch.nn.loss.losses.CombinedLoss'>
[app] emitting event: 'autodoc-before-process-signature'(<function CombinedLoss.__init__ at 0x7f04b60ff4d0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.nn.CombinedLoss', <class 'dh_segment_torch.nn.loss.losses.CombinedLoss'>
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.nn.CombinedLoss', <class 'dh_segment_torch.nn.loss.losses.CombinedLoss'>
[autodoc] from dh_segment_torch.nn import CrossEntropyLoss
[autodoc] import dh_segment_torch.nn => <module 'dh_segment_torch.nn' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/nn/__init__.py'>
[autodoc] getattr(_, 'CrossEntropyLoss')
[autodoc] => <class 'dh_segment_torch.nn.loss.losses.CrossEntropyLoss'>
[app] emitting event: 'autodoc-before-process-signature'(<function CrossEntropyLoss.__init__ at 0x7f04b5e20440>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.nn.CrossEntropyLoss', <class 'dh_segment_torch.nn.loss.losses.CrossEntro
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.nn.CrossEntropyLoss', <class 'dh_segment_torch.nn.loss.losses.CrossEntro
[autodoc] from dh_segment_torch.nn import BCEWithLogitsLoss
[autodoc] import dh_segment_torch.nn => <module 'dh_segment_torch.nn' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/nn/__init__.py'>
[autodoc] getattr(_, 'BCEWithLogitsLoss')
[autodoc] => <class 'dh_segment_torch.nn.loss.losses.BCEWithLogitsLoss'>
[app] emitting event: 'autodoc-before-process-signature'(<function BCEWithLogitsLoss.__init__ at 0x7f04b5e204d0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.nn.BCEWithLogitsLoss', <class 'dh_segment_torch.nn.loss.losses.BCEWithLo
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.nn.BCEWithLogitsLoss', <class 'dh_segment_torch.nn.loss.losses.BCEWithLo
[autodoc] from dh_segment_torch.nn import DiceLoss
[autodoc] import dh_segment_torch.nn => <module 'dh_segment_torch.nn' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/nn/__init__.py'>
[autodoc] getattr(_, 'DiceLoss')
[autodoc] => <class 'dh_segment_torch.nn.loss.losses.DiceLoss'>
[app] emitting event: 'autodoc-before-process-signature'(<function DiceLoss.__init__ at 0x7f04b5e20560>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.nn.DiceLoss', <class 'dh_segment_torch.nn.loss.losses.DiceLoss'>, {}, '(
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.nn.DiceLoss', <class 'dh_segment_torch.nn.loss.losses.DiceLoss'>, {}, ['
[autodoc] from dh_segment_torch.nn import TopologyLoss
[autodoc] import dh_segment_torch.nn => <module 'dh_segment_torch.nn' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/nn/__init__.py'>
[autodoc] getattr(_, 'TopologyLoss')
[autodoc] => <class 'dh_segment_torch.nn.loss.losses.TopologyLoss'>
[app] emitting event: 'autodoc-before-process-signature'(<function TopologyLoss.__init__ at 0x7f04b5e205f0>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.nn.TopologyLoss', <class 'dh_segment_torch.nn.loss.losses.TopologyLoss'>
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.nn.TopologyLoss', <class 'dh_segment_torch.nn.loss.losses.TopologyLoss'>
[app] emitting event: 'doctree-read'(<document: <section "dh_segment_torch.nn.loss"...>>,)
reading sources... [ 90%] train
[app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, 'train')
[app] emitting event: 'source-read'('train', ['=====\ntrain\n=====\n\n.. contents:: dh_segment_torch.nn\n    :depth: 2\n    :local:\n  
[i18n] PATCH: 'docutils.nodes.title' to have source: <title>dh_segment_torch.nn</title>
[app] emitting event: 'doctree-read'(<document: <section "train"...>>,)
reading sources... [100%] trainer
[app] emitting event: 'env-purge-doc'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, 'trainer')
[app] emitting event: 'source-read'('trainer', ['=======\nTrainer\n=======\n.. automodule:: dh_segment_torch.training.trainer\n   :memb
[autodoc] /home/raph/phd/dhSegment-torch/docs/trainer.rst:4: input:
.. automodule:: dh_segment_torch.training.trainer
   :members:
[autodoc] import dh_segment_torch.training.trainer
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[app] emitting event: 'autodoc-process-signature'('module', 'dh_segment_torch.training.trainer', <module 'dh_segment_torch.training.trainer' from '/h
[app] emitting event: 'autodoc-process-docstring'('module', 'dh_segment_torch.training.trainer', <module 'dh_segment_torch.training.trainer' from '/h
[app] emitting event: 'autodoc-skip-member'('module', 'AdamOptimizer', <class 'dh_segment_torch.training.optimizers.AdamOptimizer'>, False, {'m
[app] emitting event: 'autodoc-skip-member'('module', 'Any', typing.Any, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', 'AssignLabel', <class 'dh_segment_torch.data.transforms.assign_labels.AssignLabel'>, Fals
[app] emitting event: 'autodoc-skip-member'('module', 'AssignMultilabel', <class 'dh_segment_torch.data.transforms.assign_labels.AssignMultilab
[app] emitting event: 'autodoc-skip-member'('module', 'BestCheckpoint', <class 'dh_segment_torch.training.checkpoint.BestCheckpoint'>, False, {
[app] emitting event: 'autodoc-skip-member'('module', 'Checkpoint', <class 'dh_segment_torch.training.checkpoint.Checkpoint'>, False, {'members
[app] emitting event: 'autodoc-skip-member'('module', 'ColorLabels', <class 'dh_segment_torch.data.color_labels.ColorLabels'>, False, {'members
[app] emitting event: 'autodoc-skip-member'('module', 'ConstantScheduler', <class 'dh_segment_torch.training.schedulers.ConstantScheduler'>, Fa
[app] emitting event: 'autodoc-skip-member'('module', 'DataLoader', <class 'dh_segment_torch.data.data_loader.DataLoader'>, False, {'members': 
[app] emitting event: 'autodoc-skip-member'('module', 'Dataset', <class 'dh_segment_torch.data.datasets.dataset.Dataset'>, False, {'members': <
[app] emitting event: 'autodoc-skip-member'('module', 'Dict', typing.Dict, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', 'EarlyStopping', <class 'dh_segment_torch.training.early_stopping.EarlyStopping'>, False,
[app] emitting event: 'autodoc-skip-member'('module', 'InitializerApplier', <class 'dh_segment_torch.nn.initializers.InitializerApplier'>, Fals
[app] emitting event: 'autodoc-skip-member'('module', 'IterationCheckpoint', <class 'dh_segment_torch.training.checkpoint.IterationCheckpoint'>
[app] emitting event: 'autodoc-skip-member'('module', 'Lazy', <class 'dh_segment_torch.config.lazy.Lazy'>, False, {'members': <object object at
[app] emitting event: 'autodoc-skip-member'('module', 'List', typing.List, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', 'Logger', <class 'dh_segment_torch.training.logging.logger.Logger'>, False, {'members': <
[app] emitting event: 'autodoc-skip-member'('module', 'Metric', <class 'dh_segment_torch.metrics.metric.Metric'>, False, {'members': <object ob
[app] emitting event: 'autodoc-skip-member'('module', 'MetricTracker', <class 'dh_segment_torch.metrics.metric_tracker.MetricTracker'>, False, 
[app] emitting event: 'autodoc-skip-member'('module', 'MetricType', <function NewType.<locals>.new_type at 0x7f04b6a1ba70>, True, {'members': <
[app] emitting event: 'autodoc-skip-member'('module', 'Model', <class 'dh_segment_torch.models.model.Model'>, False, {'members': <object object
[app] emitting event: 'autodoc-skip-member'('module', 'Optimizer', <class 'dh_segment_torch.training.optimizers.Optimizer'>, False, {'members':
[app] emitting event: 'autodoc-skip-member'('module', 'Optional', typing.Optional, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', 'PatchesDataset', <class 'dh_segment_torch.data.datasets.patches_dataset.PatchesDataset'>
[app] emitting event: 'autodoc-skip-member'('module', 'ReduceOnPlateauScheduler', <class 'dh_segment_torch.training.schedulers.ReduceOnPlateauS
[app] emitting event: 'autodoc-skip-member'('module', 'Registrable', <class 'dh_segment_torch.config.registrable.Registrable'>, False, {'member
[app] emitting event: 'autodoc-skip-member'('module', 'Regularizer', <class 'dh_segment_torch.training.regularizers.Regularizer'>, False, {'mem
[app] emitting event: 'autodoc-skip-member'('module', 'Scheduler', <class 'dh_segment_torch.training.schedulers.Scheduler'>, False, {'members':
[app] emitting event: 'autodoc-skip-member'('module', 'Trainer', <class 'dh_segment_torch.training.trainer.Trainer'>, False, {'members': <objec
[app] emitting event: 'autodoc-skip-member'('module', 'Tuple', typing.Tuple, False, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', 'Union', typing.Union, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', '__builtins__', {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and 
[app] emitting event: 'autodoc-skip-member'('module', '__cached__', '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/__pycache__/train
[app] emitting event: 'autodoc-skip-member'('module', '__doc__', None, True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('module', '__file__', '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py', True, 
[app] emitting event: 'autodoc-skip-member'('module', '__loader__', <_frozen_importlib_external.SourceFileLoader object at 0x7f04b5e38a50>, Tru
[app] emitting event: 'autodoc-skip-member'('module', '__name__', 'dh_segment_torch.training.trainer', True, {'members': <object object at 0x7f
[app] emitting event: 'autodoc-skip-member'('module', '__package__', 'dh_segment_torch.training', True, {'members': <object object at 0x7f05471
[app] emitting event: 'autodoc-skip-member'('module', '__spec__', ModuleSpec(name='dh_segment_torch.training.trainer', loader=<_frozen_importli
[app] emitting event: 'autodoc-skip-member'('module', 'batch_items', <function batch_items at 0x7f04b69a7b00>, True, {'members': <object object
[app] emitting event: 'autodoc-skip-member'('module', 'data', <module 'torch.utils.data' from '/home/raph/.local/lib/python3.7/site-packages/to
[app] emitting event: 'autodoc-skip-member'('module', 'load_state_dict_not_none', <function load_state_dict_not_none at 0x7f0499eaeef0>, True, 
[app] emitting event: 'autodoc-skip-member'('module', 'logger_console', <Logger dh_segment_torch.training.trainer (WARNING)>, True, {'members':
[app] emitting event: 'autodoc-skip-member'('module', 'logging', <module 'logging' from '/home/raph/.conda/envs/dh_segment_torch/lib/python3.7/
[app] emitting event: 'autodoc-skip-member'('module', 'move_batch', <function move_batch at 0x7f04b69a7b90>, True, {'members': <object object a
[app] emitting event: 'autodoc-skip-member'('module', 'state_dict_or_none', <function state_dict_or_none at 0x7f04b6a1b7a0>, True, {'members': 
[app] emitting event: 'autodoc-skip-member'('module', 'torch', <module 'torch' from '/home/raph/.local/lib/python3.7/site-packages/torch/__init
[app] emitting event: 'autodoc-skip-member'('module', 'tqdm', <class 'tqdm.std.tqdm'>, False, {'members': <object object at 0x7f0547171170>})
[autodoc] from dh_segment_torch.training.trainer import AdamOptimizer
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'AdamOptimizer')
[autodoc] => <class 'dh_segment_torch.training.optimizers.AdamOptimizer'>
[autodoc] from dh_segment_torch.training.trainer import AssignLabel
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'AssignLabel')
[autodoc] => <class 'dh_segment_torch.data.transforms.assign_labels.AssignLabel'>
[autodoc] from dh_segment_torch.training.trainer import AssignMultilabel
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'AssignMultilabel')
[autodoc] => <class 'dh_segment_torch.data.transforms.assign_labels.AssignMultilabel'>
[autodoc] from dh_segment_torch.training.trainer import BestCheckpoint
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'BestCheckpoint')
[autodoc] => <class 'dh_segment_torch.training.checkpoint.BestCheckpoint'>
[autodoc] from dh_segment_torch.training.trainer import Checkpoint
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'Checkpoint')
[autodoc] => <class 'dh_segment_torch.training.checkpoint.Checkpoint'>
[autodoc] from dh_segment_torch.training.trainer import ColorLabels
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'ColorLabels')
[autodoc] => <class 'dh_segment_torch.data.color_labels.ColorLabels'>
[autodoc] from dh_segment_torch.training.trainer import ConstantScheduler
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'ConstantScheduler')
[autodoc] => <class 'dh_segment_torch.training.schedulers.ConstantScheduler'>
[autodoc] from dh_segment_torch.training.trainer import DataLoader
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'DataLoader')
[autodoc] => <class 'dh_segment_torch.data.data_loader.DataLoader'>
[autodoc] from dh_segment_torch.training.trainer import Dataset
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'Dataset')
[autodoc] => <class 'dh_segment_torch.data.datasets.dataset.Dataset'>
[autodoc] from dh_segment_torch.training.trainer import EarlyStopping
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'EarlyStopping')
[autodoc] => <class 'dh_segment_torch.training.early_stopping.EarlyStopping'>
[autodoc] from dh_segment_torch.training.trainer import InitializerApplier
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'InitializerApplier')
[autodoc] => <class 'dh_segment_torch.nn.initializers.InitializerApplier'>
[autodoc] from dh_segment_torch.training.trainer import IterationCheckpoint
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'IterationCheckpoint')
[autodoc] => <class 'dh_segment_torch.training.checkpoint.IterationCheckpoint'>
[autodoc] from dh_segment_torch.training.trainer import Lazy
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'Lazy')
[autodoc] => <class 'dh_segment_torch.config.lazy.Lazy'>
[autodoc] from dh_segment_torch.training.trainer import Logger
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'Logger')
[autodoc] => <class 'dh_segment_torch.training.logging.logger.Logger'>
[autodoc] from dh_segment_torch.training.trainer import Metric
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'Metric')
[autodoc] => <class 'dh_segment_torch.metrics.metric.Metric'>
[autodoc] from dh_segment_torch.training.trainer import MetricTracker
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'MetricTracker')
[autodoc] => <class 'dh_segment_torch.metrics.metric_tracker.MetricTracker'>
[autodoc] from dh_segment_torch.training.trainer import Model
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'Model')
[autodoc] => <class 'dh_segment_torch.models.model.Model'>
[autodoc] from dh_segment_torch.training.trainer import Optimizer
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'Optimizer')
[autodoc] => <class 'dh_segment_torch.training.optimizers.Optimizer'>
[autodoc] from dh_segment_torch.training.trainer import PatchesDataset
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'PatchesDataset')
[autodoc] => <class 'dh_segment_torch.data.datasets.patches_dataset.PatchesDataset'>
[autodoc] from dh_segment_torch.training.trainer import ReduceOnPlateauScheduler
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'ReduceOnPlateauScheduler')
[autodoc] => <class 'dh_segment_torch.training.schedulers.ReduceOnPlateauScheduler'>
[autodoc] from dh_segment_torch.training.trainer import Registrable
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'Registrable')
[autodoc] => <class 'dh_segment_torch.config.registrable.Registrable'>
[autodoc] from dh_segment_torch.training.trainer import Regularizer
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'Regularizer')
[autodoc] => <class 'dh_segment_torch.training.regularizers.Regularizer'>
[autodoc] from dh_segment_torch.training.trainer import Scheduler
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'Scheduler')
[autodoc] => <class 'dh_segment_torch.training.schedulers.Scheduler'>
[autodoc] from dh_segment_torch.training.trainer import Trainer
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'Trainer')
[autodoc] => <class 'dh_segment_torch.training.trainer.Trainer'>
[app] emitting event: 'autodoc-before-process-signature'(<function Trainer.__init__ at 0x7f04b5e42320>, True)
[app] emitting event: 'autodoc-process-signature'('class', 'dh_segment_torch.training.trainer.Trainer', <class 'dh_segment_torch.training.trainer.Tra
[app] emitting event: 'autodoc-process-docstring'('class', 'dh_segment_torch.training.trainer.Trainer', <class 'dh_segment_torch.training.trainer.Tra
[app] emitting event: 'autodoc-skip-member'('class', '__doc__', '\n    Test sda\n    ', True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', '__init__', <function Trainer.__init__ at 0x7f04b5e42320>, True, {'members': <object objec
[app] emitting event: 'autodoc-skip-member'('class', '__module__', 'dh_segment_torch.training.trainer', True, {'members': <object object at 0x7
[app] emitting event: 'autodoc-skip-member'('class', 'apply_model_to_batch', <function Trainer.apply_model_to_batch at 0x7f04daf06b90>, True, {
[app] emitting event: 'autodoc-skip-member'('class', 'apply_regularization', <function Trainer.apply_regularization at 0x7f0499eaeb00>, True, {
[app] emitting event: 'autodoc-skip-member'('class', 'default_implementation', 'default', True, {'members': <object object at 0x7f0547171170>})
[app] emitting event: 'autodoc-skip-member'('class', 'final_save', <function Trainer.final_save at 0x7f0499eaec20>, True, {'members': <object o
[app] emitting event: 'autodoc-skip-member'('class', 'from_partial', <bound method Trainer.from_partial of <class 'dh_segment_torch.training.tr
[app] emitting event: 'autodoc-skip-member'('class', 'get_metrics_and_losses', <function Trainer.get_metrics_and_losses at 0x7f0499eaeb90>, Tru
[app] emitting event: 'autodoc-skip-member'('class', 'load_state_dict', <function Trainer.load_state_dict at 0x7f0499eaed40>, True, {'members':
[app] emitting event: 'autodoc-skip-member'('class', 'should_terminate', <property object at 0x7f04b5e37d10>, True, {'members': <object object 
[app] emitting event: 'autodoc-skip-member'('class', 'state_dict', <function Trainer.state_dict at 0x7f0499eaecb0>, True, {'members': <object o
[app] emitting event: 'autodoc-skip-member'('class', 'train', <function Trainer.train at 0x7f0499eaa830>, True, {'members': <object object at 0
[app] emitting event: 'autodoc-skip-member'('class', 'train_epoch', <function Trainer.train_epoch at 0x7f0499eaa050>, True, {'members': <object
[app] emitting event: 'autodoc-skip-member'('class', 'train_step', <function Trainer.train_step at 0x7f0499eaa7a0>, True, {'members': <object o
[app] emitting event: 'autodoc-skip-member'('class', 'val_step', <function Trainer.val_step at 0x7f04daf06440>, True, {'members': <object objec
[app] emitting event: 'autodoc-skip-member'('class', 'validate', <function Trainer.validate at 0x7f04daf06b00>, True, {'members': <object objec
[autodoc] from dh_segment_torch.training.trainer import Trainer.from_partial
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'Trainer')
[autodoc] => <class 'dh_segment_torch.training.trainer.Trainer'>
[autodoc] getattr(_, 'from_partial')
[autodoc] => <bound method Trainer.from_partial of <class 'dh_segment_torch.training.trainer.Trainer'>>
[app] emitting event: 'autodoc-before-process-signature'(<bound method Trainer.from_partial of <class 'dh_segment_torch.training.trainer.Trainer'>>, True)
[app] emitting event: 'autodoc-process-signature'('method', 'dh_segment_torch.training.trainer.Trainer.from_partial', <bound method Trainer.from_part
[app] emitting event: 'autodoc-process-docstring'('method', 'dh_segment_torch.training.trainer.Trainer.from_partial', <bound method Trainer.from_part
[autodoc] from dh_segment_torch.training.trainer import Tuple
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'Tuple')
[autodoc] => typing.Tuple
[autodoc] from dh_segment_torch.training.trainer import tqdm
[autodoc] import dh_segment_torch.training.trainer => <module 'dh_segment_torch.training.trainer' from '/home/raph/phd/dhSegment-torch/dh_segment_torch/training/trainer.py'>
[autodoc] getattr(_, 'tqdm')
[autodoc] => <class 'tqdm.std.tqdm'>
[autodoc] output:

.. py:module:: dh_segment_torch.training.trainer


.. py:class:: Trainer(train_loader, model, optimizer, val_loader=None, val_metric_tracker=None, lr_scheduler=None, regularizer=None, early_stopping=None, train_checkpoint=None, val_checkpoint=None, loggers=None, num_epochs=20, evaluate_every_epoch=10, num_accumulation_steps=1, track_train_metrics=False, device='cpu', reset_early_stopping=True)
   :module: dh_segment_torch.training.trainer

   Test sda


   .. py:method:: Trainer.from_partial(color_labels, train_dataset, model, optimizer=None, metrics=None, train_loader=None, val_dataset=None, val_loader=None, lr_scheduler=None, regularizer=None, initializer=None, early_stopping=None, train_checkpoint=None, val_checkpoint=None, val_metric_tracker=None, loggers=None, val_metric='-loss', batch_size=8, shuffle_train=True, num_data_workers=4, ignore_padding=False, training_margin=0, num_epochs=20, evaluate_every_epoch=10, num_accumulation_steps=1, model_out_dir='./model', track_train_metrics=False, device='cpu', reset_early_stopping=True, exp_name='dhSegment_experiment', config=None)
      :module: dh_segment_torch.training.trainer
      :classmethod:

      Some doc

      :class:`.ColorLabels`

      :type color_labels: :py:class:`~dh_segment_torch.data.color_labels.ColorLabels`
      :param color_labels:
          dsada
      :type train_dataset: :py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.data.datasets.dataset.Dataset`]
      :param train_dataset:
      :type model: :py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.models.model.Model`]
      :param model:
      :type optimizer: :py:data:`~typing.Optional`\[:py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.training.optimizers.Optimizer`]]
      :param optimizer:
      :type metrics: :py:data:`~typing.Union`\[:py:class:`~typing.Dict`\[:py:class:`str`, :py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.metrics.metric.Metric`]], :py:class:`~typing.List`\[:py:data:`~typing.Union`\[:py:data:`~typing.Tuple`\[:py:class:`str`, :py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.metrics.metric.Metric`]], :py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.metrics.metric.Metric`]]], :py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.metrics.metric.Metric`], ``None``]
      :param metrics:
      :type train_loader: :py:data:`~typing.Optional`\[:py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.data.data_loader.DataLoader`]]
      :param train_loader:
      :type val_dataset: :py:data:`~typing.Optional`\[:py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.data.datasets.dataset.Dataset`]]
      :param val_dataset:
      :type val_loader: :py:data:`~typing.Optional`\[:py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.data.data_loader.DataLoader`]]
      :param val_loader:
      :type lr_scheduler: :py:data:`~typing.Optional`\[:py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.training.schedulers.Scheduler`]]
      :param lr_scheduler:
      :type regularizer: :py:data:`~typing.Optional`\[:py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.training.regularizers.Regularizer`]]
      :param regularizer:
      :type initializer: :py:data:`~typing.Optional`\[:py:class:`~dh_segment_torch.nn.initializers.InitializerApplier`]
      :param initializer:
      :type early_stopping: :py:data:`~typing.Optional`\[:py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.training.early_stopping.EarlyStopping`]]
      :param early_stopping:
      :type train_checkpoint: :py:data:`~typing.Optional`\[:py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.training.checkpoint.Checkpoint`]]
      :param train_checkpoint:
      :type val_checkpoint: :py:data:`~typing.Optional`\[:py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.training.checkpoint.BestCheckpoint`]]
      :param val_checkpoint:
      :type val_metric_tracker: :py:data:`~typing.Optional`\[:py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.metrics.metric_tracker.MetricTracker`]]
      :param val_metric_tracker:
      :type loggers: :py:data:`~typing.Union`\[:py:class:`~typing.List`\[:py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.training.logging.logger.Logger`]], :py:class:`~dh_segment_torch.config.lazy.Lazy`\[:py:class:`~dh_segment_torch.training.logging.logger.Logger`], ``None``]
      :param loggers:
      :type val_metric: :py:class:`str`
      :param val_metric:
      :type batch_size: :py:class:`int`
      :param batch_size:
      :type shuffle_train: :py:class:`bool`
      :param shuffle_train:
      :type num_data_workers: :py:class:`int`
      :param num_data_workers:
      :type ignore_padding: :py:class:`bool`
      :param ignore_padding:
      :type training_margin: :py:class:`int`
      :param training_margin:
      :type num_epochs: :py:class:`int`
      :param num_epochs:
      :type evaluate_every_epoch: :py:class:`int`
      :param evaluate_every_epoch:
      :type num_accumulation_steps: :py:class:`int`
      :param num_accumulation_steps:
      :type model_out_dir: :py:class:`str`
      :param model_out_dir:
      :type track_train_metrics: :py:class:`bool`
      :param track_train_metrics:
      :type device: :py:class:`str`
      :param device:
      :type reset_early_stopping: :py:class:`bool`
      :param reset_early_stopping:
      :type exp_name: :py:class:`str`
      :param exp_name:
      :type config: :py:data:`~typing.Optional`\[:py:class:`~typing.Dict`\[:py:class:`str`, :py:data:`~typing.Any`]]
      :param config:
      :return:

[app] emitting event: 'object-description-transform'('py', 'method', <desc_content: <paragraph...><paragraph...><field_list...>>)
[app] emitting event: 'object-description-transform'('py', 'class', <desc_content: <paragraph...><index...><desc...>>)
[i18n] PATCH: 'docutils.nodes.field_name' to have source and line: <field_name>Parameters</field_name>
[i18n] PATCH: 'docutils.nodes.field_name' to have source and line: <field_name>Returns</field_name>
[app] emitting event: 'doctree-read'(<document: <section "trainer"...>>,)

[app] emitting event: 'env-updated'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>,)
looking for now-outdated files... [app] emitting event: 'env-get-updated'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>,)
none found
pickling environment... done
checking consistency... [app] emitting event: 'env-check-consistency'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>,)
done
docnames to write: data, generated/dh_segment_torch.nn.BCEWithLogitsLoss, generated/dh_segment_torch.nn.CombinedLoss, generated/dh_segment_torch.nn.CrossEntropyLoss, generated/dh_segment_torch.nn.DiceLoss, generated/dh_segment_torch.nn.TopologyLoss, index, loss, train, trainer
preparing documents... done
writing output... [ 10%] data
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal_strong...>>
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal_emphasis...
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal_strong...>>
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal_strong...>>
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal_emphasis...
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal_strong...>>
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'doctree-resolved'(<document: <section "data"...>>, 'data')
[app] emitting event: 'html-page-context'('data', 'page.html', {'embedded': False, 'project': 'dhSegment-torch', 'release': '', 'version': ''
writing output... [ 20%] generated/dh_segment_torch.nn.BCEWithLogitsLoss
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'doctree-resolved'(<document: <section "bcewithlogitsloss"...>>, 'generated/dh_segment_torch.nn.BCEWithLogitsLoss')
[app] emitting event: 'html-page-context'('generated/dh_segment_torch.nn.BCEWithLogitsLoss', 'page.html', {'embedded': False, 'project': 'dhS
writing output... [ 30%] generated/dh_segment_torch.nn.CombinedLoss
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'doctree-resolved'(<document: <section "combinedloss"...>>, 'generated/dh_segment_torch.nn.CombinedLoss')
[app] emitting event: 'html-page-context'('generated/dh_segment_torch.nn.CombinedLoss', 'page.html', {'embedded': False, 'project': 'dhSegmen
writing output... [ 40%] generated/dh_segment_torch.nn.CrossEntropyLoss
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'doctree-resolved'(<document: <section "crossentropyloss"...>>, 'generated/dh_segment_torch.nn.CrossEntropyLoss')
[app] emitting event: 'html-page-context'('generated/dh_segment_torch.nn.CrossEntropyLoss', 'page.html', {'embedded': False, 'project': 'dhSe
writing output... [ 50%] generated/dh_segment_torch.nn.DiceLoss
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'doctree-resolved'(<document: <section "diceloss"...>>, 'generated/dh_segment_torch.nn.DiceLoss')
[app] emitting event: 'html-page-context'('generated/dh_segment_torch.nn.DiceLoss', 'page.html', {'embedded': False, 'project': 'dhSegment-to
writing output... [ 60%] generated/dh_segment_torch.nn.TopologyLoss
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'missing-reference'(<sphinx.environment.BuildEnvironment object at 0x7f0547089fd0>, <pending_xref: <literal...>>, <lite
[app] emitting event: 'doctree-resolved'(<document: <section "topologyloss"...>>, 'generated/dh_segment_torch.nn.TopologyLoss')
[app] emitting event: 'html-page-context'('generated/dh_segment_torch.nn.TopologyLoss', 'page.html', {'embedded': False, 'project': 'dhSegmen
writing output... [ 70%] index
[app] emitting event: 'doctree-resolved'(<document: <comment...><section "welcome to dhsegment-torch's docum ...>, 'index')
[app] emitting event: 'html-page-context'('index', 'page.html', {'embedded': False, 'project': 'dhSegment-torch', 'release': '', 'version': '
writing output... [ 80%] loss
[app] emitting event: 'doctree-resolved'(<document: <section "dh_segment_torch.nn.loss"...>>, 'loss')
[app] emitting event: 'build-finished'(IndexError('list index out of range'),)
